{
  "data": {
    "content": "### Platform configurations\n\nBesides development time configurations, an application often needs platform-specific configuration values such as endpoints, tags, or secrets. These values may be different on every single host where the application is deployed. The deployment descriptors/manifests, created by the application developers, refer to the configuration objects containing these values, such as config maps or secrets. Application developers expect these configuration objects to be present on the host and available for the application to consume. Commonly, these objects and their values are provided by a platform team. Depending on the organization, the platform team persona may be backed up by different departments/people, for example IT Global, Site IT, Equipment owners and such.\n\nThe concerns of the application developers and the platform team are totally separated. The application developers are focused on the application; they own and configure it. Similarly, the platform team owns and configures the platform. The key point is that the platform team doesn't configure applications, they configure environments for applications. Essentially, they provide environment variable values for the applications to use. \n\nPlatform configurations often consist of common configurations that are irrelevant to the applications consuming them, and application-specific configurations that may be unique for every application. \n\n:::image type=\"content\" source=\"media/concept-workload-management/app-platform-config.png\" alt-text=\"Diagram showing application and platform configurations.\" lightbox=\"media/concept-workload-management/app-platform-config.png\":::",
    "file_path": "/Users/cloudchase/Desktop/Vibe_Coding/Cursor/ai-content-developer/work/tmp/azure-management-docs/articles/azure-arc/kubernetes/conceptual-workload-management.md",
    "heading_path": [
      "Workload management in a multi-cluster environment with GitOps",
      "Platform configuration concepts",
      "Platform configurations"
    ],
    "section_level": 3,
    "chunk_index": 17,
    "frontmatter": {
      "title": "Workload management in a multi-cluster environment with GitOps",
      "description": "This article provides a conceptual overview of the workload management in a multi-cluster environment with GitOps.",
      "ms.date": "03/29/2023",
      "ms.topic": "concept-article",
      "author": "eedorenko",
      "ms.author": "iefedore"
    },
    "embedding_content": "Document: Workload management in a multi-cluster environment with GitOps | Topic: concept-article | Description: This article provides a conceptual overview of the workload management in a multi-cluster environmen | Section: Workload management in a multi-cluster environment with GitOps > Platform configuration concepts > Platform configurations | ### Platform configurations\n\nBesides development time configurations, an application often needs platform-specific configuration values such as endpoints, tags, or secrets. These values may be different on every single host where the application is deployed. The deployment descriptors/manifests, created by the application developers, refer to the configuration objects containing these values, such as config maps or secrets. Application developers expect these configuration objects to be present on the host and available for the application to consume. Commonly, these objects and their values are provided by a platform team. Depending on the organization, the platform team persona may be backed up by different departments/people, for example IT Global, Site IT, Equipment owners and such.\n\nThe concerns of the application developers and the platform team are totally separated. The application developers are focused on the application; they own and configure it. Similarly, the platform team owns and configures the platform. The key point is that the platform team doesn't configure applications, they configure environments for applications. Essentially, they provide environment variable values for the applications to use. \n\nPlatform configurations often consist of common configurations that are irrelevant to the applications consuming them, and application-specific configurations that may be unique for every application. \n\n:::image type=\"content\" source=\"media/concept-workload-management/app-platform-config.png\" alt-text=\"Diagram showing application and platform configurations.\" lightbox=\"media/concept-workload-management/app-platform-config.png\":::",
    "embedding": null,
    "embedding_model": null,
    "embedding_generated_at": null,
    "content_hash": "8830a861d9cb5ced290b42bc1d8ec3f72ecd4e2b1555baf05e800cdc01e1843f",
    "file_id": "68b84d3ed0d9d36d4ec56ccb018594e09d36629cea891036b7b04a8fba544e6e",
    "chunk_id": "0afa1230b1a2e56c025596d6260842ee27412c5babf14f20f0e925d9aa7d61d9",
    "prev_chunk_id": "35a6da661372789fcfd40b3cecebd1b198699d69e1c6f363ad008130a25217ce",
    "next_chunk_id": "3cba6ea799c79b0bee78419fe2cb602c2e0609e1c99ddd73902b8b5d81352521",
    "parent_heading_chunk_id": "4c19057e6a3219c5ce06dac7587993a94ef4dbba041d39c1a6acdb0ae0f2a270",
    "total_chunks_in_file": 31
  },
  "meta": {
    "type": "chunk",
    "file": "/Users/cloudchase/Desktop/Vibe_Coding/Cursor/ai-content-developer/work/tmp/azure-management-docs/articles/azure-arc/kubernetes/conceptual-workload-management.md",
    "section": [
      "Workload management in a multi-cluster environment with GitOps",
      "Platform configuration concepts",
      "Platform configurations"
    ],
    "has_embedding": false
  },
  "timestamp": "2025-06-03T19:17:33.686735"
}