{
  "data": {
    "content": "### Check whether the DNS resolution is successful for the endpoint\n\nFrom within the pod, you can run a DNS lookup to the endpoint.\n\nWhat if you can't run the [kubectl exec](https://kubernetes.io/docs/reference/generated/kubectl/kubectl-commands#exec) command to connect to the pod and install the DNS Utils package? In this situation, you can [start a test pod in the same namespace as the problematic pod](https://kubernetes.io/docs/tasks/administer-cluster/dns-debugging-resolution/#create-a-simple-pod-to-use-as-a-test-environment), and then run the tests.\n\n> [!NOTE]\n>\n> If the DNS resolution or egress traffic doesn't let you install the necessary network packages, you can use the `rishasi/ubuntu-netutil:1.0` docker image. In this image, the required packages are already installed.\n\nHere's an example procedure for checking DNS resolution:\n\n1. Start a test pod in the same namespace as the problematic pod:\n\n   ```bash\n   kubectl run -it --rm test-pod --namespace <namespace> --image=debian:stable\n   ```\n\n   After the test pod is running, you'll gain access to the pod.\n\n1. Run the following `apt-get` commands to install other tool packages:\n\n   ```bash\n   apt-get update -y\n   apt-get install dnsutils -y\n   apt-get install curl -y\n   apt-get install netcat -y\n   ```\n\n1. After the packages are installed, run the [nslookup](/windows-server/administration/windows-commands/nslookup) command to test the DNS resolution to the endpoint:\n\n   ```console\n   $ nslookup microsoft.com\n   Server:         10.0.0.10\n   Address:        10.0.0.10#53\n   ...\n   ...\n   Name:   microsoft.com\n   Address: 20.53.203.50\n   ```\n\n1. Try the DNS resolution from the upstream DNS server directly. This example uses Azure DNS:\n\n   ```console\n   $ nslookup microsoft.com 168.63.129.16\n   Server:         168.63.129.16\n   Address:        168.63.129.16#53\n   ...\n   ...\n   Address: 20.81.111.85\n   ```\n\n1. Run the `host` command to check whether the DNS requests are routed to the upstream server:\n\n   ```console\n   $ host -a microsoft.com\n   Trying \"microsoft.com.default.svc.cluster.local\"\n   Trying \"microsoft.com.svc.cluster.local\"\n   Trying \"microsoft.com.cluster.local\"\n   Trying \"microsoft.com.00idcnmrrm4edot5s2or1onxsc.bx.internal.cloudapp.net\"\n   Trying \"microsoft.com\"\n   Trying \"microsoft.com\"\n   ;; ->>HEADER<<- opcode: QUERY, status: NOERROR, id: 62884\n   ;; flags: qr rd ra; QUERY: 1, ANSWER: 27, AUTHORITY: 0, ADDITIONAL: 5\n   \n   ;; QUESTION SECTION:\n   ;microsoft.com.                 IN      ANY\n   \n   ;; ANSWER SECTION:\n   microsoft.com.          30      IN      NS      ns1-39.azure-dns.com.\n   ...\n   ...\n   ns4-39.azure-dns.info.  30      IN      A       13.107.206.39\n   \n   Received 2121 bytes from 10.0.0.10#53 in 232 ms\n   ```\n\n1. Run a test pod in the Windows node pool:",
    "file_path": "/Users/cloudchase/Desktop/Vibe_Coding/Cursor/ai-content-developer/work/tmp/azure-management-docs/articles/azure-arc/kubernetes/diagnose-connection-issues.md",
    "heading_path": [
      "Diagnose connection issues for Azure Arc-enabled Kubernetes clusters",
      "Connections with a proxy server",
      "Check whether the DNS resolution is successful for the endpoint"
    ],
    "section_level": 3,
    "chunk_index": 17,
    "frontmatter": {
      "title": "Diagnose connection issues for Azure Arc-enabled Kubernetes clusters",
      "ms.date": "12/15/2023",
      "ms.topic": "how-to",
      "ms.custom": "devx-track-azurecli",
      "description": "Learn how to resolve common issues when connecting Kubernetes clusters to Azure Arc."
    },
    "embedding_content": "Document: Diagnose connection issues for Azure Arc-enabled Kubernetes clusters | Topic: how-to | Description: Learn how to resolve common issues when connecting Kubernetes clusters to Azure Arc. | Section: Diagnose connection issues for Azure Arc-enabled Kubernetes clusters > Connections with a proxy server > Check whether the DNS resolution is successful for the endpoint | ### Check whether the DNS resolution is successful for the endpoint\n\nFrom within the pod, you can run a DNS lookup to the endpoint.\n\nWhat if you can't run the [kubectl exec](https://kubernetes.io/docs/reference/generated/kubectl/kubectl-commands#exec) command to connect to the pod and install the DNS Utils package? In this situation, you can [start a test pod in the same namespace as the problematic pod](https://kubernetes.io/docs/tasks/administer-cluster/dns-debugging-resolution/#create-a-simple-pod-to-use-as-a-test-environment), and then run the tests.\n\n> [!NOTE]\n>\n> If the DNS resolution or egress traffic doesn't let you install the necessary network packages, you can use the `rishasi/ubuntu-netutil:1.0` docker image. In this image, the required packages are already installed.\n\nHere's an example procedure for checking DNS resolution:\n\n1. Start a test pod in the same namespace as the problematic pod:\n\n   ```bash\n   kubectl run -it --rm test-pod --namespace <namespace> --image=debian:stable\n   ```\n\n   After the test pod is running, you'll gain access to the pod.\n\n1. Run the following `apt-get` commands to install other tool packages:\n\n   ```bash\n   apt-get update -y\n   apt-get install dnsutils -y\n   apt-get install curl -y\n   apt-get install netcat -y\n   ```\n\n1. After the packages are installed, run the [nslookup](/windows-server/administration/windows-commands/nslookup) command to test the DNS resolution to the endpoint:\n\n   ```console\n   $ nslookup microsoft.com\n   Server:         10.0.0.10\n   Address:        10.0.0.10#53\n   ...\n   ...\n   Name:   microsoft.com\n   Address: 20.53.203.50\n   ```\n\n1. Try the DNS resolution from the upstream DNS server directly. This example uses Azure DNS:\n\n   ```console\n   $ nslookup microsoft.com 168.63.129.16\n   Server:         168.63.129.16\n   Address:        168.63.129.16#53\n   ...\n   ...\n   Address: 20.81.111.85\n   ```\n\n1. Run the `host` command to check whether the DNS requests are routed to the upstream server:\n\n   ```console\n   $ host -a microsoft.com\n   Trying \"microsoft.com.default.svc.cluster.local\"\n   Trying \"microsoft.com.svc.cluster.local\"\n   Trying \"microsoft.com.cluster.local\"\n   Trying \"microsoft.com.00idcnmrrm4edot5s2or1onxsc.bx.internal.cloudapp.net\"\n   Trying \"microsoft.com\"\n   Trying \"microsoft.com\"\n   ;; ->>HEADER<<- opcode: QUERY, status: NOERROR, id: 62884\n   ;; flags: qr rd ra; QUERY: 1, ANSWER: 27, AUTHORITY: 0, ADDITIONAL: 5\n   \n   ;; QUESTION SECTION:\n   ;microsoft.com.                 IN      ANY\n   \n   ;; ANSWER SECTION:\n   microsoft.com.          30      IN      NS      ns1-39.azure-dns.com.\n   ...\n   ...\n   ns4-39.azure-dns.info.  30      IN      A       13.107.206.39\n   \n   Received 2121 bytes from 10.0.0.10#53 in 232 ms\n   ```\n\n1. Run a test pod in the Windows node pool:",
    "embedding": null,
    "embedding_model": null,
    "embedding_generated_at": null,
    "content_hash": "b009a3361a996426137ba332b2c16d34101b829fe03e0985056bc02749dbee3e",
    "file_id": "eb2c2144a880262e6bf50095716b22512ece0494b74a66c56b64b7b306ce7d59",
    "chunk_id": "73b1cd5b24440777cacae8bb1b123121a92963929cdf3989e81c843f50780068",
    "prev_chunk_id": "e83923e689d500c404d768c7253d283d9263cb63bb0bb286e21f66aa8d2ee56f",
    "next_chunk_id": "7e9875fc2ad526b747fe4adb1c7581e501b34b4603bdad01d0fa21d0ec385ad6",
    "parent_heading_chunk_id": "b8d90622d403e30f74cad0c6dfa27eddb52bac55e7875f011596695e6fe8d2b4",
    "total_chunks_in_file": 21
  },
  "meta": {
    "type": "chunk",
    "file": "/Users/cloudchase/Desktop/Vibe_Coding/Cursor/ai-content-developer/work/tmp/azure-management-docs/articles/azure-arc/kubernetes/diagnose-connection-issues.md",
    "section": [
      "Diagnose connection issues for Azure Arc-enabled Kubernetes clusters",
      "Connections with a proxy server",
      "Check whether the DNS resolution is successful for the endpoint"
    ],
    "has_embedding": false
  },
  "timestamp": "2025-06-02T15:36:19.835354"
}