{
  "data": {
    "content": "## Kustomization\n\nKustomization is a setting created for Flux configurations that lets you choose a specific path in the source repo that is reconciled into the cluster. You don't need to create a `kustomization.yaml file on this specified path. By default, all of the manifests in this path are reconciled. However, if you want to have a Kustomize overlay for applications available on this repo path, you should create [Kustomize files](https://kustomize.io/) in git for the Flux configuration to make use of.\n\nBy using [`az k8s-configuration flux kustomization create`](/cli/azure/k8s-configuration/flux/kustomization#az-k8s-configuration-flux-kustomization-create), you can create one or more kustomizations during the configuration.\n\n| Parameter | Format | Notes |\n| ------------- | ------------- | ------------- |\n| `--kustomization` | No value | Start of a string of parameters that configure a kustomization. You can use it multiple times to create multiple kustomizations. |\n| `name` | String | Unique name for this kustomization. |\n| `path` | String | Path within the Git repository to reconcile with the cluster. Default is the top level of the branch. |\n| `prune` | Boolean | Default is `false`. Set `prune=true` to assure that the objects that Flux deployed to the cluster are cleaned up if they're removed from the repository or if the Flux configuration or kustomizations are deleted. Using `prune=true` is important for environments where users don't have access to the clusters and can make changes only through the Git repository. |\n| `depends_on` | String | Name of one or more kustomizations (within this configuration) that must reconcile before this kustomization can reconcile. For example: `depends_on=[\"kustomization1\",\"kustomization2\"]`. If you remove a kustomization that has dependent kustomizations, the state of dependent kustomizations becomes `DependencyNotReady`, and reconciliation halts.|\n| `timeout` | [golang duration format](https://pkg.go.dev/time#Duration.String) | Default: `10m`.  |\n| `sync_interval` | [golang duration format](https://pkg.go.dev/time#Duration.String) | Default: `10m`.  |\n| `retry_interval` | [golang duration format](https://pkg.go.dev/time#Duration.String) | Default: `10m`.  |\n| `validation` | String | Values: `none`, `client`, `server`. Default: `none`.  See [Flux documentation](https://fluxcd.io/docs/) for details.|\n| `force` | Boolean | Default: `false`. Set `force=true` to instruct the kustomize controller to re-create resources when patching fails because of an immutable field change. |\n\nYou can also use [`az k8s-configuration flux kustomization`](/cli/azure/k8s-configuration/flux/kustomization) to update, list, show, and delete kustomizations in a Flux configuration.",
    "file_path": "/Users/cloudchase/Desktop/Vibe_Coding/Cursor/ai-content-developer/work/tmp/azure-management-docs/articles/azure-arc/kubernetes/gitops-flux2-parameters.md",
    "heading_path": [
      "GitOps (Flux v2) supported parameters",
      "Kustomization"
    ],
    "section_level": 2,
    "chunk_index": 15,
    "frontmatter": {
      "title": "GitOps (Flux v2) supported parameters",
      "description": "Understand the supported parameters for GitOps (Flux v2) in Azure for use in Azure Arc-enabled Kubernetes and Azure Kubernetes Service (AKS) clusters.",
      "ms.date": "04/30/2024",
      "ms.topic": "concept-article"
    },
    "embedding_content": "Document: GitOps (Flux v2) supported parameters | Topic: concept-article | Description: Understand the supported parameters for GitOps (Flux v2) in Azure for use in Azure Arc-enabled Kuber | Section: GitOps (Flux v2) supported parameters > Kustomization | ## Kustomization\n\nKustomization is a setting created for Flux configurations that lets you choose a specific path in the source repo that is reconciled into the cluster. You don't need to create a `kustomization.yaml file on this specified path. By default, all of the manifests in this path are reconciled. However, if you want to have a Kustomize overlay for applications available on this repo path, you should create [Kustomize files](https://kustomize.io/) in git for the Flux configuration to make use of.\n\nBy using [`az k8s-configuration flux kustomization create`](/cli/azure/k8s-configuration/flux/kustomization#az-k8s-configuration-flux-kustomization-create), you can create one or more kustomizations during the configuration.\n\n| Parameter | Format | Notes |\n| ------------- | ------------- | ------------- |\n| `--kustomization` | No value | Start of a string of parameters that configure a kustomization. You can use it multiple times to create multiple kustomizations. |\n| `name` | String | Unique name for this kustomization. |\n| `path` | String | Path within the Git repository to reconcile with the cluster. Default is the top level of the branch. |\n| `prune` | Boolean | Default is `false`. Set `prune=true` to assure that the objects that Flux deployed to the cluster are cleaned up if they're removed from the repository or if the Flux configuration or kustomizations are deleted. Using `prune=true` is important for environments where users don't have access to the clusters and can make changes only through the Git repository. |\n| `depends_on` | String | Name of one or more kustomizations (within this configuration) that must reconcile before this kustomization can reconcile. For example: `depends_on=[\"kustomization1\",\"kustomization2\"]`. If you remove a kustomization that has dependent kustomizations, the state of dependent kustomizations becomes `DependencyNotReady`, and reconciliation halts.|\n| `timeout` | [golang duration format](https://pkg.go.dev/time#Duration.String) | Default: `10m`.  |\n| `sync_interval` | [golang duration format](https://pkg.go.dev/time#Duration.String) | Default: `10m`.  |\n| `retry_interval` | [golang duration format](https://pkg.go.dev/time#Duration.String) | Default: `10m`.  |\n| `validation` | String | Values: `none`, `client`, `server`. Default: `none`.  See [Flux documentation](https://fluxcd.io/docs/) for details.|\n| `force` | Boolean | Default: `false`. Set `force=true` to instruct the kustomize controller to re-create resources when patching fails because of an immutable field change. |\n\nYou can also use [`az k8s-configuration flux kustomization`](/cli/azure/k8s-configuration/flux/kustomization) to update, list, show, and delete kustomizations in a Flux configuration.",
    "embedding": null,
    "embedding_model": null,
    "embedding_generated_at": null,
    "content_hash": "45bade5e37b4a1aa3a22b8fb5e8187dabb1ede6eea5199d60863fe80eea24419",
    "file_id": "02d4b2af2163dc989c6ea4559d43d61f5cf0f807501e695739a66da6794c9888",
    "chunk_id": "10c65dab2cc72a0a089d6afc019c119d77bc12ef4c369e9f3f42d45182a507a2",
    "prev_chunk_id": "7b2bd28634e9b2c18b783598dfc13b5ab8919078f0f02342b0d7cc609519192a",
    "next_chunk_id": "8344f2e8c2740832da496cc4f99f5e9bc3c51a7fd56728ce1bbf721d40553194",
    "parent_heading_chunk_id": "ded11cbf3909198604184cfa6501e953a5dcc9c6f6de8bb59acc2fb473409650",
    "total_chunks_in_file": 17
  },
  "meta": {
    "type": "chunk",
    "file": "/Users/cloudchase/Desktop/Vibe_Coding/Cursor/ai-content-developer/work/tmp/azure-management-docs/articles/azure-arc/kubernetes/gitops-flux2-parameters.md",
    "section": [
      "GitOps (Flux v2) supported parameters",
      "Kustomization"
    ],
    "has_embedding": false
  },
  "timestamp": "2025-06-02T15:36:19.220824"
}