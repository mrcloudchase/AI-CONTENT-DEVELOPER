{
  "data": {
    "content": "### Use a shared kubeconfig file\n\n1. Run the following command to set the credentials for the user. Specify `serverApplicationId` as `6256c85f-0aad-4d50-b960-e6e9b21efe35` and `clientApplicationId` as `3f4439ff-e698-4d6d-84fe-09c9d574f06b`:\n\n   ```console\n   kubectl config set-credentials <testuser>@<mytenant.onmicrosoft.com> \\\n   --auth-provider=azure \\\n   --auth-provider-arg=environment=AzurePublicCloud \\\n   --auth-provider-arg=client-id=<clientApplicationId> \\\n   --auth-provider-arg=tenant-id=<tenantId> \\\n   --auth-provider-arg=apiserver-id=<serverApplicationId>\n   ```\n\n1. Open the *kubeconfig* file that you created earlier. Under `contexts`, verify that the context associated with the cluster points to the user credentials that you created in the previous step. To set the current context to these user credentials, run the following command:\n\n   ```console\n   kubectl config set-context --current=true --user=<testuser>@<mytenant.onmicrosoft.com>\n   ```\n\n1. Add the **config-mode** setting under `user` > `config`:\n  \n   ```console\n   name: testuser@mytenant.onmicrosoft.com\n   user:\n       auth-provider:\n       config:\n           apiserver-id: $SERVER_APP_ID\n           client-id: $CLIENT_APP_ID\n           environment: AzurePublicCloud\n           tenant-id: $TENANT_ID\n           config-mode: \"1\"\n       name: azure\n   ```\n\n1. [Exec plugin](https://kubernetes.io/docs/reference/access-authn-authz/authentication/#client-go-credential-plugins) is a Kubernetes authentication strategy that allows `kubectl` to execute an external command to receive user credentials to send to `apiserver`. Starting with Kubernetes version 1.26, in order to use the exec plugin to receive user credentials, you must use [Azure kubelogin](https://azure.github.io/kubelogin/index.html), a `client-go` credential (exec) plugin that implements Azure authentication. To install Azure kubelogin:\n\n   - For Windows or Mac, follow the [Azure kubelogin installation instructions](https://azure.github.io/kubelogin/install.html#installation).\n   - For Linux or Ubuntu, download the [latest version of kubelogin](https://github.com/Azure/kubelogin/releases), then run the following commands:\n\n     ```bash\n     curl -LO https://github.com/Azure/kubelogin/releases/download/\"$KUBELOGIN_VERSION\"/kubelogin-linux-amd64.zip \n\n     unzip kubelogin-linux-amd64.zip \n\n     sudo mv bin/linux_amd64/kubelogin /usr/local/bin/ \n\n     sudo chmod +x /usr/local/bin/kubelogin \n     ```\n\n1. Kubelogin can be used to authenticate with Azure Arc-enabled clusters by requesting a proof-of-possession (PoP) token. [Convert](https://azure.github.io/kubelogin/concepts/azure-arc.html) the kubeconfig using kubelogin to use the appropriate [login mode](https://azure.github.io/kubelogin/concepts/login-modes.html). For example, for [device code login](https://azure.github.io/kubelogin/concepts/login-modes/devicecode.html) with a Microsoft Entra user, the commands would be as follows:",
    "file_path": "/Users/cloudchase/Desktop/Vibe_Coding/Cursor/ai-content-developer/work/tmp/azure-management-docs/articles/azure-arc/kubernetes/azure-rbac.md",
    "heading_path": [
      "Use Azure RBAC on Azure Arc-enabled Kubernetes clusters",
      "Configure kubectl with user credentials",
      "Use a shared kubeconfig file"
    ],
    "section_level": 3,
    "chunk_index": 11,
    "frontmatter": {
      "title": "Azure RBAC on Azure Arc-enabled Kubernetes clusters",
      "ms.date": "02/25/2025",
      "ms.topic": "how-to",
      "ms.custom": "devx-track-azurecli",
      "description": "Use Azure RBAC for authorization checks on Azure Arc-enabled Kubernetes clusters."
    },
    "embedding_content": "Document: Azure RBAC on Azure Arc-enabled Kubernetes clusters | Topic: how-to | Description: Use Azure RBAC for authorization checks on Azure Arc-enabled Kubernetes clusters. | Section: Use Azure RBAC on Azure Arc-enabled Kubernetes clusters > Configure kubectl with user credentials > Use a shared kubeconfig file | ### Use a shared kubeconfig file\n\n1. Run the following command to set the credentials for the user. Specify `serverApplicationId` as `6256c85f-0aad-4d50-b960-e6e9b21efe35` and `clientApplicationId` as `3f4439ff-e698-4d6d-84fe-09c9d574f06b`:\n\n   ```console\n   kubectl config set-credentials <testuser>@<mytenant.onmicrosoft.com> \\\n   --auth-provider=azure \\\n   --auth-provider-arg=environment=AzurePublicCloud \\\n   --auth-provider-arg=client-id=<clientApplicationId> \\\n   --auth-provider-arg=tenant-id=<tenantId> \\\n   --auth-provider-arg=apiserver-id=<serverApplicationId>\n   ```\n\n1. Open the *kubeconfig* file that you created earlier. Under `contexts`, verify that the context associated with the cluster points to the user credentials that you created in the previous step. To set the current context to these user credentials, run the following command:\n\n   ```console\n   kubectl config set-context --current=true --user=<testuser>@<mytenant.onmicrosoft.com>\n   ```\n\n1. Add the **config-mode** setting under `user` > `config`:\n  \n   ```console\n   name: testuser@mytenant.onmicrosoft.com\n   user:\n       auth-provider:\n       config:\n           apiserver-id: $SERVER_APP_ID\n           client-id: $CLIENT_APP_ID\n           environment: AzurePublicCloud\n           tenant-id: $TENANT_ID\n           config-mode: \"1\"\n       name: azure\n   ```\n\n1. [Exec plugin](https://kubernetes.io/docs/reference/access-authn-authz/authentication/#client-go-credential-plugins) is a Kubernetes authentication strategy that allows `kubectl` to execute an external command to receive user credentials to send to `apiserver`. Starting with Kubernetes version 1.26, in order to use the exec plugin to receive user credentials, you must use [Azure kubelogin](https://azure.github.io/kubelogin/index.html), a `client-go` credential (exec) plugin that implements Azure authentication. To install Azure kubelogin:\n\n   - For Windows or Mac, follow the [Azure kubelogin installation instructions](https://azure.github.io/kubelogin/install.html#installation).\n   - For Linux or Ubuntu, download the [latest version of kubelogin](https://github.com/Azure/kubelogin/releases), then run the following commands:\n\n     ```bash\n     curl -LO https://github.com/Azure/kubelogin/releases/download/\"$KUBELOGIN_VERSION\"/kubelogin-linux-amd64.zip \n\n     unzip kubelogin-linux-amd64.zip \n\n     sudo mv bin/linux_amd64/kubelogin /usr/local/bin/ \n\n     sudo chmod +x /usr/local/bin/kubelogin \n     ```\n\n1. Kubelogin can be used to authenticate with Azure Arc-enabled clusters by requesting a proof-of-possession (PoP) token. [Convert](https://azure.github.io/kubelogin/concepts/azure-arc.html) the kubeconfig using kubelogin to use the appropriate [login mode](https://azure.github.io/kubelogin/concepts/login-modes.html). For example, for [device code login](https://azure.github.io/kubelogin/concepts/login-modes/devicecode.html) with a Microsoft Entra user, the commands would be as follows:",
    "embedding": null,
    "embedding_model": null,
    "embedding_generated_at": null,
    "content_hash": "74d052910ddeaf4f5d8b4af674cfbb47cb9aa0c4dc318b5a3e56f28b1011cfd8",
    "file_id": "3e8ed022d954361887bcaeb5266dfc135ba567b5c7d7df942f9288c9158f0b00",
    "chunk_id": "b41894f6baa1b72a11b32efe196f88f01724089f54ed806a581f36fdac0b27de",
    "prev_chunk_id": "0f38477703c40c79e06a09dd63a6675586c707749c6e7284f2f2ece862b10f13",
    "next_chunk_id": "ee8496749060a193c3373560509965acea672d4d8c3a5431d2312d7c0b0ab48c",
    "parent_heading_chunk_id": "a39ce6ab5226023aa2cec5b17478f391b23e54ddb0495fb8f87dc35ac2ec473e",
    "total_chunks_in_file": 19
  },
  "meta": {
    "type": "chunk",
    "file": "/Users/cloudchase/Desktop/Vibe_Coding/Cursor/ai-content-developer/work/tmp/azure-management-docs/articles/azure-arc/kubernetes/azure-rbac.md",
    "section": [
      "Use Azure RBAC on Azure Arc-enabled Kubernetes clusters",
      "Configure kubectl with user credentials",
      "Use a shared kubeconfig file"
    ],
    "has_embedding": false
  },
  "timestamp": "2025-06-03T19:17:33.659698"
}