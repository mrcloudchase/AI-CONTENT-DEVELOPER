{
  "data": {
    "content": "## Architecture\n\n:::image type=\"content\" source=\"media/conceptual-extensions.png\" border=\"false\" alt-text=\"Diagram showing the cluster extension installation workflow architecture.\" lightbox=\"media/conceptual-extensions.png\":::\n\n[!INCLUDE [arc-jumpstart-diagram](~/reusable-content/ce-skilling/azure/includes/arc-jumpstart-diagram.md)]\n\nThe cluster extension instance is created as an extension Azure Resource Manager resource (`Microsoft.KubernetesConfiguration/extensions`) on top of the Azure Arc-enabled Kubernetes resource (represented by `Microsoft.Kubernetes/connectedClusters`) in Azure Resource Manager.\n\nThis representation in Azure Resource Manager allows you to author policies that check for the presence or absence of a specific cluster extension in all Azure Arc-enabled Kubernetes resources. After you determine which clusters are missing cluster extensions that have specific property values, you can remediate noncompliant resources by using Azure Policy.\n\nThe `config-agent` component that runs on your cluster tracks new and updated extension resources on the Azure Arc-enabled Kubernetes resource. The `extensions-manager` agent running in your cluster reads the extension type that needs to be installed. Then, it pulls the associated Helm chart from Azure Container Registry or Microsoft Container Registry and installs it on the cluster.\n\nBoth the `config-agent` and `extensions-manager` components running in the cluster handle extension instance updates, version updates, and deleting extension instances. These agents use the system-assigned managed identity of the cluster to securely communicate with Azure services.\n\n> [!NOTE]\n> `config-agent` checks for new or updated extension instances on top of Azure Arc-enabled Kubernetes cluster. The agents require connectivity for the desired state of the extension to be pulled to the cluster. If agents can't connect to Azure, propagation of the desired state to the cluster is delayed.\n>\n> Protected configuration settings for an extension instance are stored for up to 48 hours in the Azure Arc-enabled Kubernetes services. As a result, if the cluster remains disconnected during the 48 hours after the extension resource is created in Azure, the extension changes from a `Pending` state to a `Failed` state. To prevent this, we recommend that you bring clusters online regularly.",
    "file_path": "/Users/cloudchase/Desktop/Vibe_Coding/Cursor/ai-content-developer/work/tmp/azure-management-docs/articles/azure-arc/kubernetes/conceptual-extensions.md",
    "heading_path": [
      "Cluster extensions",
      "Architecture"
    ],
    "section_level": 2,
    "chunk_index": 1,
    "frontmatter": {
      "title": "Cluster extensions in Azure Arc-enabled Kubernetes",
      "ms.date": "04/22/2025",
      "ms.topic": "concept-article",
      "description": "Get a conceptual overview of the Azure Arc-enabled Kubernetes cluster extensions capability."
    },
    "embedding_content": "Document: Cluster extensions in Azure Arc-enabled Kubernetes | Topic: concept-article | Description: Get a conceptual overview of the Azure Arc-enabled Kubernetes cluster extensions capability. | Section: Cluster extensions > Architecture | ## Architecture\n\n:::image type=\"content\" source=\"media/conceptual-extensions.png\" border=\"false\" alt-text=\"Diagram showing the cluster extension installation workflow architecture.\" lightbox=\"media/conceptual-extensions.png\":::\n\n[!INCLUDE [arc-jumpstart-diagram](~/reusable-content/ce-skilling/azure/includes/arc-jumpstart-diagram.md)]\n\nThe cluster extension instance is created as an extension Azure Resource Manager resource (`Microsoft.KubernetesConfiguration/extensions`) on top of the Azure Arc-enabled Kubernetes resource (represented by `Microsoft.Kubernetes/connectedClusters`) in Azure Resource Manager.\n\nThis representation in Azure Resource Manager allows you to author policies that check for the presence or absence of a specific cluster extension in all Azure Arc-enabled Kubernetes resources. After you determine which clusters are missing cluster extensions that have specific property values, you can remediate noncompliant resources by using Azure Policy.\n\nThe `config-agent` component that runs on your cluster tracks new and updated extension resources on the Azure Arc-enabled Kubernetes resource. The `extensions-manager` agent running in your cluster reads the extension type that needs to be installed. Then, it pulls the associated Helm chart from Azure Container Registry or Microsoft Container Registry and installs it on the cluster.\n\nBoth the `config-agent` and `extensions-manager` components running in the cluster handle extension instance updates, version updates, and deleting extension instances. These agents use the system-assigned managed identity of the cluster to securely communicate with Azure services.\n\n> [!NOTE]\n> `config-agent` checks for new or updated extension instances on top of Azure Arc-enabled Kubernetes cluster. The agents require connectivity for the desired state of the extension to be pulled to the cluster. If agents can't connect to Azure, propagation of the desired state to the cluster is delayed.\n>\n> Protected configuration settings for an extension instance are stored for up to 48 hours in the Azure Arc-enabled Kubernetes services. As a result, if the cluster remains disconnected during the 48 hours after the extension resource is created in Azure, the extension changes from a `Pending` state to a `Failed` state. To prevent this, we recommend that you bring clusters online regularly.",
    "embedding": null,
    "embedding_model": null,
    "embedding_generated_at": null,
    "content_hash": "926be8085aa49eded300c3a1530d0d372e98a44f7de3a8a76865ab4f93445f9d",
    "file_id": "b282853edc009160f3aa3852da6a879426220b75e2fc9835c9c2e28a2ece3619",
    "chunk_id": "fe31a1d1ad8a7d0b12b9367d2a5dc0470936325c3cc9d1e16426ca19eb202d28",
    "prev_chunk_id": "4a91a51fcf269d7b0c8757783927bd9f171410f6fbde889d43737a96c99dd335",
    "next_chunk_id": "4236beb60a6103541a424849f050dad48de0a0b1b7062b8b3c1223d6efc96ab7",
    "parent_heading_chunk_id": "1a5bee6110f64c5226a52dad4d69d179f6312ee001624e1de14af189fb02eea3",
    "total_chunks_in_file": 5
  },
  "meta": {
    "type": "chunk",
    "file": "/Users/cloudchase/Desktop/Vibe_Coding/Cursor/ai-content-developer/work/tmp/azure-management-docs/articles/azure-arc/kubernetes/conceptual-extensions.md",
    "section": [
      "Cluster extensions",
      "Architecture"
    ],
    "has_embedding": false
  },
  "timestamp": "2025-06-03T19:17:35.527417"
}