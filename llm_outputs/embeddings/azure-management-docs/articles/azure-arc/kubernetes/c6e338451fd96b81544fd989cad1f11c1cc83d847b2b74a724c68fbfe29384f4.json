{
  "data": {
    "content": "## Create GitOps (ArgoCD) extension (simple installation)\n\nThe GitOps [ArgoCD installation](https://argo-cd.readthedocs.io/en/stable/operator-manual/installation/) supports multi-tenancy in high availability (HA) mode and supports workload identity.\n\n> [!IMPORTANT]\n> The HA mode is the default configuration and requires three nodes in the cluster to be able to install. The command below adds `--config deployWithHighAvailability=false` to install the extension on a single node.\n\n This command creates the simplest configuration installing the ArgoCD components to a new `argocd` namespace with cluster-wide access. Cluster-wide access enables ArgoCD app definitions to be detected in any namespace listed in the ArgoCD configmap configuration in the cluster. For example: `namespace1,namespace2`\n\n```azurecli\naz k8s-extension create --resource-group <resource-group> --cluster-name <cluster-name> \\\n--cluster-type managedClusters \\\n--name argocd \\\n--extension-type Microsoft.ArgoCD \\\n--auto-upgrade false \\\n--release-train preview \\\n--version 0.0.7-preview \\\n--config deployWithHightAvailability=false \\\n--config namespaceInstall=false \\\n\u2013-config \"config-maps.argocd-cmd-params-cm.data.application\\.namespaces=namespace1,namespace2\"\n```\n\nIf you want to limit ArgoCD access to a specific namespace, use the `--config namespaceInstall=true` along with `--target-namespace <namespace>` parameters. This installation command creates a new `<namespace>` namespace and installs the ArgoCD components in the `<namespace>`. The installation command also enables the ability to install multiple instances of ArgoCD in the same cluster. ArgoCD application definitions in this configuration only function in the `<namespace>` namespace.",
    "file_path": "/Users/cloudchase/Desktop/Vibe_Coding/Cursor/ai-content-developer/work/tmp/azure-management-docs/articles/azure-arc/kubernetes/tutorial-use-gitops-argocd.md",
    "heading_path": [
      "Tutorial: Deploy applications using GitOps with ArgoCD",
      "Create GitOps (ArgoCD) extension (simple installation)"
    ],
    "section_level": 2,
    "chunk_index": 8,
    "frontmatter": {
      "title": "Tutorial: Deploy applications using GitOps",
      "description": "This tutorial shows how to use GitOps with ArgoCD in Azure Arc and AKS clusters.",
      "ms.date": "04/06/2025",
      "ms.topic": "tutorial",
      "ms.custom": "template-tutorial, devx-track-azurecli, references_regions"
    },
    "embedding_content": "Document: Tutorial: Deploy applications using GitOps | Topic: tutorial | Description: This tutorial shows how to use GitOps with ArgoCD in Azure Arc and AKS clusters. | Section: Tutorial: Deploy applications using GitOps with ArgoCD > Create GitOps (ArgoCD) extension (simple installation) | ## Create GitOps (ArgoCD) extension (simple installation)\n\nThe GitOps [ArgoCD installation](https://argo-cd.readthedocs.io/en/stable/operator-manual/installation/) supports multi-tenancy in high availability (HA) mode and supports workload identity.\n\n> [!IMPORTANT]\n> The HA mode is the default configuration and requires three nodes in the cluster to be able to install. The command below adds `--config deployWithHighAvailability=false` to install the extension on a single node.\n\n This command creates the simplest configuration installing the ArgoCD components to a new `argocd` namespace with cluster-wide access. Cluster-wide access enables ArgoCD app definitions to be detected in any namespace listed in the ArgoCD configmap configuration in the cluster. For example: `namespace1,namespace2`\n\n```azurecli\naz k8s-extension create --resource-group <resource-group> --cluster-name <cluster-name> \\\n--cluster-type managedClusters \\\n--name argocd \\\n--extension-type Microsoft.ArgoCD \\\n--auto-upgrade false \\\n--release-train preview \\\n--version 0.0.7-preview \\\n--config deployWithHightAvailability=false \\\n--config namespaceInstall=false \\\n\u2013-config \"config-maps.argocd-cmd-params-cm.data.application\\.namespaces=namespace1,namespace2\"\n```\n\nIf you want to limit ArgoCD access to a specific namespace, use the `--config namespaceInstall=true` along with `--target-namespace <namespace>` parameters. This installation command creates a new `<namespace>` namespace and installs the ArgoCD components in the `<namespace>`. The installation command also enables the ability to install multiple instances of ArgoCD in the same cluster. ArgoCD application definitions in this configuration only function in the `<namespace>` namespace.",
    "embedding": null,
    "embedding_model": null,
    "embedding_generated_at": null,
    "content_hash": "f75e148aa2b96489365bf682b784bf67e79b64f36980611e1c3df2d7e17cfaa7",
    "file_id": "40afb2683704ffdcb5f7624f02b0a312ff2bac5d8767707e99ce1c3873aa09da",
    "chunk_id": "c6e338451fd96b81544fd989cad1f11c1cc83d847b2b74a724c68fbfe29384f4",
    "prev_chunk_id": "b4433af34ae4f2297a33e49e2cd6043c8ac95ba8fc7c5fe2bc5f2e45a7bd6bed",
    "next_chunk_id": "7dc2ce0721442c0ebddb94ae76d9062c97bb9116e2d6ae039a661fa8d52fb316",
    "parent_heading_chunk_id": "63a03cfcfa8a9a5165527910acafe1cf7cfb514f79c7761e4f423adf5fd6af24",
    "total_chunks_in_file": 18
  },
  "meta": {
    "type": "chunk",
    "file": "/Users/cloudchase/Desktop/Vibe_Coding/Cursor/ai-content-developer/work/tmp/azure-management-docs/articles/azure-arc/kubernetes/tutorial-use-gitops-argocd.md",
    "section": [
      "Tutorial: Deploy applications using GitOps with ArgoCD",
      "Create GitOps (ArgoCD) extension (simple installation)"
    ],
    "has_embedding": false
  },
  "timestamp": "2025-06-03T19:17:33.974601"
}