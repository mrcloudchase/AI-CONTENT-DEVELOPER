{
  "data": {
    "content": "### Create a `SecretSync` object\n\nEach synchronized secret also requires a `SecretSync` object, to define cluster-specific information. Here you specify information such as the name of the secret in your cluster and names for each version of the secret stored in your cluster.\n\nCreate one `SecretSync` object YAML file for each secret, following this template. The Kubernetes namespace should match the namespace of the matching `SecretProviderClass`.\n\n```yaml\ncat <<EOF > ss.yaml\napiVersion: secret-sync.x-k8s.io/v1alpha1\nkind: SecretSync\nmetadata:\n  name: secret-sync-name                                  # Name of the object; must be unique per Kubernetes namespace\n  namespace: ${KUBERNETES_NAMESPACE}                      # Kubernetes namespace\nspec:\n  serviceAccountName: ${SERVICE_ACCOUNT_NAME}             # The Kubernetes service account to be given permissions to access the secret.\n  secretProviderClassName: secret-provider-class-name     # The name of the matching SecretProviderClass with the configuration to access the AKV storing this secret\n  secretObject:\n    type: Opaque\n    data:\n    - sourcePath: ${KEYVAULT_SECRET_NAME}/0                # Name of the secret in Azure Key Vault with an optional version number (defaults to latest)\n      targetKey: ${KEYVAULT_SECRET_NAME}-data-key0         # Target name of the secret in the Kubernetes secret store (must be unique)\n    - sourcePath: ${KEYVAULT_SECRET_NAME}/1                # [optional] Next version of the AKV secret. Note that versions of the secret must match the configured objectVersionHistory in the secrets provider class \n      targetKey: ${KEYVAULT_SECRET_NAME}-data-key1         # [optional] Next target name of the secret in the K8s secret store\nEOF\n```",
    "file_path": "/Users/cloudchase/Desktop/Vibe_Coding/Cursor/ai-content-developer/work/tmp/azure-management-docs/articles/azure-arc/kubernetes/secret-store-extension.md",
    "heading_path": [
      "Use the Secret Store extension to fetch secrets for offline access in Azure Arc-enabled Kubernetes clusters",
      "Configure the SSE",
      "Create a `SecretSync` object"
    ],
    "section_level": 3,
    "chunk_index": 14,
    "frontmatter": {
      "title": "Use the Azure Key Vault Secret Store extension to sync secrets to the Kubernetes secret store for offline access in Azure Arc-enabled Kubernetes clusters",
      "description": "The Azure Key Vault Secret Store extension for Kubernetes (\"SSE\") automatically synchronizes secrets from an Azure Key Vault to a Kubernetes cluster for offline access.",
      "ms.date": "09/26/2024",
      "ms.topic": "how-to",
      "ms.custom": "references_regions, ignite-2024"
    },
    "embedding_content": "Document: Use the Azure Key Vault Secret Store extension to sync secrets to the Kubernetes secret store for offline access in Azure Arc-enabled Kubernetes clusters | Topic: how-to | Description: The Azure Key Vault Secret Store extension for Kubernetes (\"SSE\") automatically synchronizes secrets | Section: Use the Secret Store extension to fetch secrets for offline access in Azure Arc-enabled Kubernetes clusters > Configure the SSE > Create a `SecretSync` object | ### Create a `SecretSync` object\n\nEach synchronized secret also requires a `SecretSync` object, to define cluster-specific information. Here you specify information such as the name of the secret in your cluster and names for each version of the secret stored in your cluster.\n\nCreate one `SecretSync` object YAML file for each secret, following this template. The Kubernetes namespace should match the namespace of the matching `SecretProviderClass`.\n\n```yaml\ncat <<EOF > ss.yaml\napiVersion: secret-sync.x-k8s.io/v1alpha1\nkind: SecretSync\nmetadata:\n  name: secret-sync-name                                  # Name of the object; must be unique per Kubernetes namespace\n  namespace: ${KUBERNETES_NAMESPACE}                      # Kubernetes namespace\nspec:\n  serviceAccountName: ${SERVICE_ACCOUNT_NAME}             # The Kubernetes service account to be given permissions to access the secret.\n  secretProviderClassName: secret-provider-class-name     # The name of the matching SecretProviderClass with the configuration to access the AKV storing this secret\n  secretObject:\n    type: Opaque\n    data:\n    - sourcePath: ${KEYVAULT_SECRET_NAME}/0                # Name of the secret in Azure Key Vault with an optional version number (defaults to latest)\n      targetKey: ${KEYVAULT_SECRET_NAME}-data-key0         # Target name of the secret in the Kubernetes secret store (must be unique)\n    - sourcePath: ${KEYVAULT_SECRET_NAME}/1                # [optional] Next version of the AKV secret. Note that versions of the secret must match the configured objectVersionHistory in the secrets provider class \n      targetKey: ${KEYVAULT_SECRET_NAME}-data-key1         # [optional] Next target name of the secret in the K8s secret store\nEOF\n```",
    "embedding": null,
    "embedding_model": null,
    "embedding_generated_at": null,
    "content_hash": "beb48e974384b68256d9c2aca4f30edffb70c6384c4e82de1fefe13c93832075",
    "file_id": "5b880508d2c3419668daf37d0ffb257e9268a80b1899afb8daa2f62b08b56d1e",
    "chunk_id": "c63afc3ca7a7f32249bb52ce99cc2e4e73b764cb2d7422244e4e89ceadb154e6",
    "prev_chunk_id": "4f4a34f441cadcfdbca99491405f7c7b17e2bbbfc8690bea66887ad853a2d518",
    "next_chunk_id": "dd4885f0e321cae6165ce347022650912c3979582a2fd791cbd69c2ef44647d6",
    "parent_heading_chunk_id": "1bd0cfde61025bfae1dd2e2c5b4fb7bb1ef18fc2e302114c0694b35fa8fb9e95",
    "total_chunks_in_file": 29
  },
  "meta": {
    "type": "chunk",
    "file": "/Users/cloudchase/Desktop/Vibe_Coding/Cursor/ai-content-developer/work/tmp/azure-management-docs/articles/azure-arc/kubernetes/secret-store-extension.md",
    "section": [
      "Use the Secret Store extension to fetch secrets for offline access in Azure Arc-enabled Kubernetes clusters",
      "Configure the SSE",
      "Create a `SecretSync` object"
    ],
    "has_embedding": false
  },
  "timestamp": "2025-06-02T15:36:20.906716"
}