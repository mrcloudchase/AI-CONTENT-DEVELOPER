{
  "data": {
    "content": "### Check webhooks: Validating and Mutating\n\nCheck the **Validating** webhook by running the following command:\n\n```bash\nkubectl get ValidatingWebhookConfiguration --selector app=osm-controller\n```\n\nIf the **Validating** webhook is healthy, output that looks similar to the following example appears:\n\n```output\nNAME                     WEBHOOKS   AGE\nosm-validator-mesh-osm   1          81m\n```\n\nCheck the **Mutating** webhook by running the following command:\n\n```bash\nkubectl get MutatingWebhookConfiguration --selector app=osm-injector\n```\n\nIf the **Mutating** webhook is healthy, output that looks similar to the following example appears:\n\n```output\nNAME                  WEBHOOKS   AGE\narc-osm-webhook-osm   1          102m\n```\n\nCheck for the service and the Certificate Authority bundle (CA bundle) of the **Validating** webhook by using this command:\n\n```bash\nkubectl get ValidatingWebhookConfiguration osm-validator-mesh-osm -o json | jq '.webhooks[0].clientConfig.service'\n```\n\nA well-configured **Validating** webhook has output that looks similar to this example:\n\n```json\n{\n  \"name\": \"osm-config-validator\",\n  \"namespace\": \"arc-osm-system\",\n  \"path\": \"/validate\",\n  \"port\": 9093\n}\n```\n\nCheck for the service and the CA bundle of the **Mutating** webhook by using the following command:\n\n```bash\nkubectl get MutatingWebhookConfiguration arc-osm-webhook-osm -o json | jq '.webhooks[0].clientConfig.service'\n```\n\nA well-configured **Mutating** webhook has output that looks similar to this example:\n\n```output\n{\n  \"name\": \"osm-injector\",\n  \"namespace\": \"arc-osm-system\",\n  \"path\": \"/mutate-pod-creation\",\n  \"port\": 9090\n}\n```\n\nCheck whether the OSM controller has given the **Validating** (or **Mutating**) webhook a CA bundle by using the following command:\n\n```bash\nkubectl get ValidatingWebhookConfiguration osm-validator-mesh-osm -o json | jq -r '.webhooks[0].clientConfig.caBundle' | wc -c\n```\n\n```bash\nkubectl get MutatingWebhookConfiguration arc-osm-webhook-osm -o json | jq -r '.webhooks[0].clientConfig.caBundle' | wc -c\n```\n\nExample output:\n\n```bash\n1845\n```\n\nThe number in the output indicates the number of bytes, or the size of the CA bundle. If the output is empty, 0, or a number under 1,000, the CA bundle isn't correctly provisioned. Without a correct CA bundle, `ValidatingWebhook` throws an error.",
    "file_path": "/Users/cloudchase/Desktop/Vibe_Coding/Cursor/ai-content-developer/work/tmp/azure-management-docs/articles/azure-arc/kubernetes/extensions-troubleshooting.md",
    "heading_path": [
      "Troubleshoot extension issues for Azure Arc-enabled Kubernetes clusters",
      "Azure Arc-enabled Open Service Mesh",
      "Check webhooks: Validating and Mutating"
    ],
    "section_level": 3,
    "chunk_index": 20,
    "frontmatter": {
      "title": "Troubleshoot extension issues for Azure Arc-enabled Kubernetes clusters",
      "ms.date": "05/13/2025",
      "ms.topic": "how-to",
      "ms.custom": "devx-track-azurecli, references_regions",
      "description": "Learn how to resolve common problems with Azure Arc-enabled Kubernetes cluster extensions."
    },
    "embedding_content": "Document: Troubleshoot extension issues for Azure Arc-enabled Kubernetes clusters | Topic: how-to | Description: Learn how to resolve common problems with Azure Arc-enabled Kubernetes cluster extensions. | Section: Troubleshoot extension issues for Azure Arc-enabled Kubernetes clusters > Azure Arc-enabled Open Service Mesh > Check webhooks: Validating and Mutating | ### Check webhooks: Validating and Mutating\n\nCheck the **Validating** webhook by running the following command:\n\n```bash\nkubectl get ValidatingWebhookConfiguration --selector app=osm-controller\n```\n\nIf the **Validating** webhook is healthy, output that looks similar to the following example appears:\n\n```output\nNAME                     WEBHOOKS   AGE\nosm-validator-mesh-osm   1          81m\n```\n\nCheck the **Mutating** webhook by running the following command:\n\n```bash\nkubectl get MutatingWebhookConfiguration --selector app=osm-injector\n```\n\nIf the **Mutating** webhook is healthy, output that looks similar to the following example appears:\n\n```output\nNAME                  WEBHOOKS   AGE\narc-osm-webhook-osm   1          102m\n```\n\nCheck for the service and the Certificate Authority bundle (CA bundle) of the **Validating** webhook by using this command:\n\n```bash\nkubectl get ValidatingWebhookConfiguration osm-validator-mesh-osm -o json | jq '.webhooks[0].clientConfig.service'\n```\n\nA well-configured **Validating** webhook has output that looks similar to this example:\n\n```json\n{\n  \"name\": \"osm-config-validator\",\n  \"namespace\": \"arc-osm-system\",\n  \"path\": \"/validate\",\n  \"port\": 9093\n}\n```\n\nCheck for the service and the CA bundle of the **Mutating** webhook by using the following command:\n\n```bash\nkubectl get MutatingWebhookConfiguration arc-osm-webhook-osm -o json | jq '.webhooks[0].clientConfig.service'\n```\n\nA well-configured **Mutating** webhook has output that looks similar to this example:\n\n```output\n{\n  \"name\": \"osm-injector\",\n  \"namespace\": \"arc-osm-system\",\n  \"path\": \"/mutate-pod-creation\",\n  \"port\": 9090\n}\n```\n\nCheck whether the OSM controller has given the **Validating** (or **Mutating**) webhook a CA bundle by using the following command:\n\n```bash\nkubectl get ValidatingWebhookConfiguration osm-validator-mesh-osm -o json | jq -r '.webhooks[0].clientConfig.caBundle' | wc -c\n```\n\n```bash\nkubectl get MutatingWebhookConfiguration arc-osm-webhook-osm -o json | jq -r '.webhooks[0].clientConfig.caBundle' | wc -c\n```\n\nExample output:\n\n```bash\n1845\n```\n\nThe number in the output indicates the number of bytes, or the size of the CA bundle. If the output is empty, 0, or a number under 1,000, the CA bundle isn't correctly provisioned. Without a correct CA bundle, `ValidatingWebhook` throws an error.",
    "embedding": null,
    "embedding_model": null,
    "embedding_generated_at": null,
    "content_hash": "3d05ac8153b355ca7f14dc3be3bc03395cee9328503b0268d70f8278a60b10ca",
    "file_id": "1f63fa43f2b17b2154d29c1cbb3d1981154d17e29e07c8b9d2d4d14336534624",
    "chunk_id": "82eb1e82f196c7b987a6c5a5b6ae47e01fb68295be630b9968ee3561bf4cb24d",
    "prev_chunk_id": "0fad0ee7607e9061d4cff8f4776a614b2ede1fd0f52878517bc1f64ff5e9ec0d",
    "next_chunk_id": "90bf67a5417f86e605212855f265ea6e63b489ef0844632bf1a0522e9905bf35",
    "parent_heading_chunk_id": "8583f0ff1b4bd3717efed0ad24dfa6c4ccb9039657a1a38bc9cf38593ab9b8c0",
    "total_chunks_in_file": 28
  },
  "meta": {
    "type": "chunk",
    "file": "/Users/cloudchase/Desktop/Vibe_Coding/Cursor/ai-content-developer/work/tmp/azure-management-docs/articles/azure-arc/kubernetes/extensions-troubleshooting.md",
    "section": [
      "Troubleshoot extension issues for Azure Arc-enabled Kubernetes clusters",
      "Azure Arc-enabled Open Service Mesh",
      "Check webhooks: Validating and Mutating"
    ],
    "has_embedding": false
  },
  "timestamp": "2025-06-03T19:17:34.410414"
}