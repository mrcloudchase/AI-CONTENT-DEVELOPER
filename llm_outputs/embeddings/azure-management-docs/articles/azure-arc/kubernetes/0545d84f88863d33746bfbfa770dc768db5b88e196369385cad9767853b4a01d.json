{
  "data": {
    "content": "### Application code repository\n\nThe application repository contains the application code that developers work on during their inner loop. The application's deployment templates live in this repository in a generic form, such as Helm or Kustomize. Environment-specific values aren't stored in the repository.\n\nChanges to this repo invoke a PR or CI pipeline that starts the deployment process.",
    "file_path": "/Users/cloudchase/Desktop/Vibe_Coding/Cursor/ai-content-developer/work/tmp/azure-management-docs/articles/azure-arc/kubernetes/conceptual-gitops-flux2-ci-cd.md",
    "heading_path": [
      "CI/CD workflow using GitOps (Flux v2)",
      "Architecture",
      "Application code repository"
    ],
    "section_level": 3,
    "chunk_index": 2,
    "frontmatter": {
      "title": "CI/CD Workflow using GitOps (Flux v2) - Azure Arc-enabled Kubernetes",
      "description": "This article provides a conceptual overview of a CI/CD workflow using GitOps.",
      "ms.date": "04/22/2025",
      "ms.topic": "concept-article",
      "author": "eedorenko",
      "ms.author": "iefedore"
    },
    "embedding_content": "Document: CI/CD Workflow using GitOps (Flux v2) - Azure Arc-enabled Kubernetes | Topic: concept-article | Description: This article provides a conceptual overview of a CI/CD workflow using GitOps. | Section: CI/CD workflow using GitOps (Flux v2) > Architecture > Application code repository | ### Application code repository\n\nThe application repository contains the application code that developers work on during their inner loop. The application's deployment templates live in this repository in a generic form, such as Helm or Kustomize. Environment-specific values aren't stored in the repository.\n\nChanges to this repo invoke a PR or CI pipeline that starts the deployment process.",
    "embedding": null,
    "embedding_model": null,
    "embedding_generated_at": null,
    "content_hash": "4442e97a19eb86d91b169d238433ec9f42d5563ff2c477fffba2c262b848fa6e",
    "file_id": "c034872bae0e1b385c7013c870cafa2b3fd327c006d451d059a4fed1eeb95586",
    "chunk_id": "0545d84f88863d33746bfbfa770dc768db5b88e196369385cad9767853b4a01d",
    "prev_chunk_id": "1db8c69998f2a5ef2ad717295b6f0693daff1c979fda16b08579ad3f1c475b5a",
    "next_chunk_id": "75ec49336817939a82b961045691a608e087bda05d3836cf73fb6ce735207447",
    "parent_heading_chunk_id": "6e654ec708ade78cfdb424c4fdddf4c0f1e0c4fc7f495781f3404001c9997a60",
    "total_chunks_in_file": 13
  },
  "meta": {
    "type": "chunk",
    "file": "/Users/cloudchase/Desktop/Vibe_Coding/Cursor/ai-content-developer/work/tmp/azure-management-docs/articles/azure-arc/kubernetes/conceptual-gitops-flux2-ci-cd.md",
    "section": [
      "CI/CD workflow using GitOps (Flux v2)",
      "Architecture",
      "Application code repository"
    ],
    "has_embedding": false
  },
  "timestamp": "2025-06-03T19:17:35.774997"
}