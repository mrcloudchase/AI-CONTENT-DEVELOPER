{
  "data": {
    "content": "### GitOps repository\n\nThe GitOps repository represents the current desired state of all environments across clusters. Any change to this repository is picked up by the Flux service in each cluster and deployed. Changes to the desired state of the clusters are presented as pull requests, which are then reviewed, and finally merged upon approval of the changes. These pull requests contain changes to deployment templates and the resulting rendered Kubernetes manifests. Low-level rendered manifests allow more careful inspection of changes typically unseen at the template-level.",
    "file_path": "/Users/cloudchase/Desktop/Vibe_Coding/Cursor/ai-content-developer/work/tmp/azure-management-docs/articles/azure-arc/kubernetes/conceptual-gitops-flux2-ci-cd.md",
    "heading_path": [
      "CI/CD workflow using GitOps (Flux v2)",
      "Architecture",
      "GitOps repository"
    ],
    "section_level": 3,
    "chunk_index": 8,
    "frontmatter": {
      "title": "CI/CD Workflow using GitOps (Flux v2) - Azure Arc-enabled Kubernetes",
      "description": "This article provides a conceptual overview of a CI/CD workflow using GitOps.",
      "ms.date": "04/22/2025",
      "ms.topic": "concept-article",
      "author": "eedorenko",
      "ms.author": "iefedore"
    },
    "embedding_content": "Document: CI/CD Workflow using GitOps (Flux v2) - Azure Arc-enabled Kubernetes | Topic: concept-article | Description: This article provides a conceptual overview of a CI/CD workflow using GitOps. | Section: CI/CD workflow using GitOps (Flux v2) > Architecture > GitOps repository | ### GitOps repository\n\nThe GitOps repository represents the current desired state of all environments across clusters. Any change to this repository is picked up by the Flux service in each cluster and deployed. Changes to the desired state of the clusters are presented as pull requests, which are then reviewed, and finally merged upon approval of the changes. These pull requests contain changes to deployment templates and the resulting rendered Kubernetes manifests. Low-level rendered manifests allow more careful inspection of changes typically unseen at the template-level.",
    "embedding": null,
    "embedding_model": null,
    "embedding_generated_at": null,
    "content_hash": "a1552084565d0016ae25710ee41af6c2cfdf67d2493a74d5336ab77ad0aa1915",
    "file_id": "c034872bae0e1b385c7013c870cafa2b3fd327c006d451d059a4fed1eeb95586",
    "chunk_id": "9fb3e7724ed6f57335d322b5b0053e46c75ef9f96f4b7122c3639d946e970631",
    "prev_chunk_id": "8a37cd908cc56ae499cb7de7de66b418a7402b06a4ab9ccb68b4a1a6d299409e",
    "next_chunk_id": "eeb87f98210756d1dca552314984f4d05edd826737031615b2d2b1ca3eeb110a",
    "parent_heading_chunk_id": "6e654ec708ade78cfdb424c4fdddf4c0f1e0c4fc7f495781f3404001c9997a60",
    "total_chunks_in_file": 13
  },
  "meta": {
    "type": "chunk",
    "file": "/Users/cloudchase/Desktop/Vibe_Coding/Cursor/ai-content-developer/work/tmp/azure-management-docs/articles/azure-arc/kubernetes/conceptual-gitops-flux2-ci-cd.md",
    "section": [
      "CI/CD workflow using GitOps (Flux v2)",
      "Architecture",
      "GitOps repository"
    ],
    "has_embedding": false
  },
  "timestamp": "2025-06-03T19:17:35.876558"
}