{
  "data": {
    "content": "# GitOps (Flux v2) supported parameters\n\nAzure provides an automated application deployments capability using GitOps that works with Azure Kubernetes Service (AKS) and Azure Arc-enabled Kubernetes clusters. GitOps with Flux v2 lets you use your Git repository as the source of truth for cluster configuration and application deployment. For more information, see [Application deployments with GitOps (Flux v2)](conceptual-gitops-flux2.md) and [Tutorial: Deploy applications using GitOps with Flux v2](tutorial-use-gitops-flux2.md).\n\nGitOps on Azure Arc-enabled Kubernetes or Azure Kubernetes Service uses [Flux](https://fluxcd.io/docs/), a popular open-source tool set that supports many parameters to enable various scenarios. For a description of all parameters that Flux supports, see the [official Flux documentation](https://fluxcd.io/docs/).\n\nTo see all the parameters supported by Flux in Azure, see the [`az k8s-configuration` documentation](/cli/azure/k8s-configuration). This implementation doesn't currently support every parameter that Flux supports. Let us know if a parameter you need is missing from the Azure implementation.\n\nThis article describes some of the parameters and arguments available for the `az k8s-configuration flux create` command. You can also see the full list of parameters for the `az k8s-configuration flux` by using the `-h` parameter in Azure CLI (for example, `az k8s-configuration flux -h` or `az k8s-configuration flux create -h`).\n\n> [!TIP]\n> A workaround to deploy Flux resources with non-supported parameters is to define the required Flux custom resources (such as [GitRepository](https://fluxcd.io/flux/components/source/gitrepositories/) or [Kustomization](https://fluxcd.io/flux/components/kustomize/kustomization/)) inside your Git repository. Deploy these resources with the `az k8s-configuration flux create` command. You will then still be able to access your Flux resources through the Azure Arc UI.",
    "file_path": "/Users/cloudchase/Desktop/Vibe_Coding/Cursor/ai-content-developer/work/tmp/azure-management-docs/articles/azure-arc/kubernetes/gitops-flux2-parameters.md",
    "heading_path": [
      "GitOps (Flux v2) supported parameters"
    ],
    "section_level": 1,
    "chunk_index": 0,
    "frontmatter": {
      "title": "GitOps (Flux v2) supported parameters",
      "description": "Understand the supported parameters for GitOps (Flux v2) in Azure for use in Azure Arc-enabled Kubernetes and Azure Kubernetes Service (AKS) clusters.",
      "ms.date": "04/30/2024",
      "ms.topic": "concept-article"
    },
    "embedding_content": "Document: GitOps (Flux v2) supported parameters | Topic: concept-article | Description: Understand the supported parameters for GitOps (Flux v2) in Azure for use in Azure Arc-enabled Kuber | Section: GitOps (Flux v2) supported parameters | # GitOps (Flux v2) supported parameters\n\nAzure provides an automated application deployments capability using GitOps that works with Azure Kubernetes Service (AKS) and Azure Arc-enabled Kubernetes clusters. GitOps with Flux v2 lets you use your Git repository as the source of truth for cluster configuration and application deployment. For more information, see [Application deployments with GitOps (Flux v2)](conceptual-gitops-flux2.md) and [Tutorial: Deploy applications using GitOps with Flux v2](tutorial-use-gitops-flux2.md).\n\nGitOps on Azure Arc-enabled Kubernetes or Azure Kubernetes Service uses [Flux](https://fluxcd.io/docs/), a popular open-source tool set that supports many parameters to enable various scenarios. For a description of all parameters that Flux supports, see the [official Flux documentation](https://fluxcd.io/docs/).\n\nTo see all the parameters supported by Flux in Azure, see the [`az k8s-configuration` documentation](/cli/azure/k8s-configuration). This implementation doesn't currently support every parameter that Flux supports. Let us know if a parameter you need is missing from the Azure implementation.\n\nThis article describes some of the parameters and arguments available for the `az k8s-configuration flux create` command. You can also see the full list of parameters for the `az k8s-configuration flux` by using the `-h` parameter in Azure CLI (for example, `az k8s-configuration flux -h` or `az k8s-configuration flux create -h`).\n\n> [!TIP]\n> A workaround to deploy Flux resources with non-supported parameters is to define the required Flux custom resources (such as [GitRepository](https://fluxcd.io/flux/components/source/gitrepositories/) or [Kustomization](https://fluxcd.io/flux/components/kustomize/kustomization/)) inside your Git repository. Deploy these resources with the `az k8s-configuration flux create` command. You will then still be able to access your Flux resources through the Azure Arc UI.",
    "embedding": null,
    "embedding_model": null,
    "embedding_generated_at": null,
    "content_hash": "6924fd523559438f301dda1a517125f0f35a5359b3310d332ff6b8c23f70e51f",
    "file_id": "02d4b2af2163dc989c6ea4559d43d61f5cf0f807501e695739a66da6794c9888",
    "chunk_id": "444208680eedd8055762cc0cc4b4ce8d629610aa439b27d1823d3020014a579f",
    "prev_chunk_id": null,
    "next_chunk_id": "fdfd47912117af88cf84b6cdde505b40cdc3e741163f65c36185a94a3931ea9a",
    "parent_heading_chunk_id": null,
    "total_chunks_in_file": 17
  },
  "meta": {
    "type": "chunk",
    "file": "/Users/cloudchase/Desktop/Vibe_Coding/Cursor/ai-content-developer/work/tmp/azure-management-docs/articles/azure-arc/kubernetes/gitops-flux2-parameters.md",
    "section": [
      "GitOps (Flux v2) supported parameters"
    ],
    "has_embedding": false
  },
  "timestamp": "2025-06-02T15:36:19.200026"
}