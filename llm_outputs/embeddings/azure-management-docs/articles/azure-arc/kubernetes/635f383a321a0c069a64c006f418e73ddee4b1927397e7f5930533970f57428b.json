{
  "data": {
    "content": "# Update a config map with the configurations for west-us clusters\ncat <<EOF >cluster-types/west-us/west-us-config.yaml\napiVersion: v1\nkind: ConfigMap\nmetadata:\n  name: west-us-config\n  labels:\n     platform-config: \"true\"\n     region: west-us\ndata:\n  REGION: West US\n  DATABASE_URL: mysql://west-stage:8806/mysql2\nEOF\n\ngit add .\ngit commit -m 'database url configuration'\ngit config pull.rebase false\ngit pull --no-edit\ngit push\n```\n\nThe scheduler scans all config maps in the environment and collects values for each cluster type based on label matching. Then, it puts a `platform-config` config map in every deployment target folder in the `Platform GitOps` repository. The `platform-config` config map contains all of the platform configuration values that the workload can use on this cluster type in this environment.\n\nIn a few seconds, a new PR to the `stage` branch in the `Platform GitOps` repository appears:\n\n:::image type=\"content\" source=\"media/workload-management/stage-db-url-update-pr.png\" alt-text=\"Screenshot showing a PR to update the database URL on stage.\" lightbox=\"media/workload-management/stage-db-url-update-pr.png\":::\n\nApprove the PR and merge it.\n\nOnce the new configuration has arrived to the `large` cluster, check the `uat-test` application instance at `localhost:8002` after \nrunning the following commands:\n\n```bash\nkubectl rollout restart deployment hello-world-deployment -n stage-large-hello-world-app-uat-test --context=large\nkubectl port-forward svc/hello-world-service -n stage-large-hello-world-app-uat-test 8002:8000 --context=large\n```\n\nYou'll see the updated database url:\n\n:::image type=\"content\" source=\"media/workload-management/updated-db-url-page.png\" alt-text=\"Screenshot showing a page with updated database url.\" lightbox=\"media/workload-management/updated-db-url-page.png\":::",
    "file_path": "/Users/cloudchase/Desktop/Vibe_Coding/Cursor/ai-content-developer/work/tmp/azure-management-docs/articles/azure-arc/kubernetes/workload-management.md",
    "heading_path": [
      "Update a config map with the configurations for west-us clusters"
    ],
    "section_level": 1,
    "chunk_index": 25,
    "frontmatter": {
      "title": "Explore workload management in a multi-cluster environment with GitOps",
      "description": "Explore typical use-cases that Platform and Application teams face on a daily basis working with Kubernetes workloads in a multi-cluster environment.",
      "keywords": "GitOps, Flux, Kubernetes, K8s, Azure, Arc, AKS, ci/cd, devops",
      "author": "eedorenko",
      "ms.author": "iefedore",
      "ms.topic": "how-to",
      "ms.date": "03/29/2023"
    },
    "embedding_content": "Document: Explore workload management in a multi-cluster environment with GitOps | Topic: how-to | Description: Explore typical use-cases that Platform and Application teams face on a daily basis working with Kub | Section: Update a config map with the configurations for west-us clusters | # Update a config map with the configurations for west-us clusters\ncat <<EOF >cluster-types/west-us/west-us-config.yaml\napiVersion: v1\nkind: ConfigMap\nmetadata:\n  name: west-us-config\n  labels:\n     platform-config: \"true\"\n     region: west-us\ndata:\n  REGION: West US\n  DATABASE_URL: mysql://west-stage:8806/mysql2\nEOF\n\ngit add .\ngit commit -m 'database url configuration'\ngit config pull.rebase false\ngit pull --no-edit\ngit push\n```\n\nThe scheduler scans all config maps in the environment and collects values for each cluster type based on label matching. Then, it puts a `platform-config` config map in every deployment target folder in the `Platform GitOps` repository. The `platform-config` config map contains all of the platform configuration values that the workload can use on this cluster type in this environment.\n\nIn a few seconds, a new PR to the `stage` branch in the `Platform GitOps` repository appears:\n\n:::image type=\"content\" source=\"media/workload-management/stage-db-url-update-pr.png\" alt-text=\"Screenshot showing a PR to update the database URL on stage.\" lightbox=\"media/workload-management/stage-db-url-update-pr.png\":::\n\nApprove the PR and merge it.\n\nOnce the new configuration has arrived to the `large` cluster, check the `uat-test` application instance at `localhost:8002` after \nrunning the following commands:\n\n```bash\nkubectl rollout restart deployment hello-world-deployment -n stage-large-hello-world-app-uat-test --context=large\nkubectl port-forward svc/hello-world-service -n stage-large-hello-world-app-uat-test 8002:8000 --context=large\n```\n\nYou'll see the updated database url:\n\n:::image type=\"content\" source=\"media/workload-management/updated-db-url-page.png\" alt-text=\"Screenshot showing a page with updated database url.\" lightbox=\"media/workload-management/updated-db-url-page.png\":::",
    "embedding": null,
    "embedding_model": null,
    "embedding_generated_at": null,
    "content_hash": "737c68d3f7f05496d7742c6fda335382bf0ddcf5771a955a877cd4e9d0803aff",
    "file_id": "860938b8acc2edaecb7d029e76e899735c706b1e333677a4f8a2ac5adf75a619",
    "chunk_id": "635f383a321a0c069a64c006f418e73ddee4b1927397e7f5930533970f57428b",
    "prev_chunk_id": "b17e2e9e901fed0e28f46e035483dd56115fd79e16930177b64eeeff8e91e7ad",
    "next_chunk_id": "c4492fbf90c74d172fb32bcdc7b43eb3d4f9b4d56f198f4a072eda2ad718bb06",
    "parent_heading_chunk_id": null,
    "total_chunks_in_file": 32
  },
  "meta": {
    "type": "chunk",
    "file": "/Users/cloudchase/Desktop/Vibe_Coding/Cursor/ai-content-developer/work/tmp/azure-management-docs/articles/azure-arc/kubernetes/workload-management.md",
    "section": [
      "Update a config map with the configurations for west-us clusters"
    ],
    "has_embedding": false
  },
  "timestamp": "2025-06-03T19:17:34.389208"
}