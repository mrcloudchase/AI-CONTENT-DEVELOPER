{
  "data": {
    "content": "### CD pipeline\n\nThe CD pipeline is automatically triggered by successful CI builds. In this pipeline environment, environment-specific values are substituted into the previously published templates, and a new pull request is raised against the GitOps repository with these values. This pull request contains the proposed changes to the desired state of one or more Kubernetes clusters. Cluster administrators review the pull request and approve the merge to the GitOps repository. The pipeline waits for the pull request to merge, after which Flux syncs and applies the state changes.",
    "file_path": "/Users/cloudchase/Desktop/Vibe_Coding/Cursor/ai-content-developer/work/tmp/azure-management-docs/articles/azure-arc/kubernetes/conceptual-gitops-flux2-ci-cd.md",
    "heading_path": [
      "CI/CD workflow using GitOps (Flux v2)",
      "Architecture",
      "CD pipeline"
    ],
    "section_level": 3,
    "chunk_index": 7,
    "frontmatter": {
      "title": "CI/CD Workflow using GitOps (Flux v2) - Azure Arc-enabled Kubernetes",
      "description": "This article provides a conceptual overview of a CI/CD workflow using GitOps.",
      "ms.date": "04/22/2025",
      "ms.topic": "concept-article",
      "author": "eedorenko",
      "ms.author": "iefedore"
    },
    "embedding_content": "Document: CI/CD Workflow using GitOps (Flux v2) - Azure Arc-enabled Kubernetes | Topic: concept-article | Description: This article provides a conceptual overview of a CI/CD workflow using GitOps. | Section: CI/CD workflow using GitOps (Flux v2) > Architecture > CD pipeline | ### CD pipeline\n\nThe CD pipeline is automatically triggered by successful CI builds. In this pipeline environment, environment-specific values are substituted into the previously published templates, and a new pull request is raised against the GitOps repository with these values. This pull request contains the proposed changes to the desired state of one or more Kubernetes clusters. Cluster administrators review the pull request and approve the merge to the GitOps repository. The pipeline waits for the pull request to merge, after which Flux syncs and applies the state changes.",
    "embedding": null,
    "embedding_model": null,
    "embedding_generated_at": null,
    "content_hash": "0c786e9424ea733679a3435d4f29f1ddf3763a1297707db0f6c9803531a1ba24",
    "file_id": "c034872bae0e1b385c7013c870cafa2b3fd327c006d451d059a4fed1eeb95586",
    "chunk_id": "8a37cd908cc56ae499cb7de7de66b418a7402b06a4ab9ccb68b4a1a6d299409e",
    "prev_chunk_id": "617873ada3af43f4636e7290b6a8d9852044fedcff6d3da2d24b27b792fda4b8",
    "next_chunk_id": "9fb3e7724ed6f57335d322b5b0053e46c75ef9f96f4b7122c3639d946e970631",
    "parent_heading_chunk_id": "6e654ec708ade78cfdb424c4fdddf4c0f1e0c4fc7f495781f3404001c9997a60",
    "total_chunks_in_file": 13
  },
  "meta": {
    "type": "chunk",
    "file": "/Users/cloudchase/Desktop/Vibe_Coding/Cursor/ai-content-developer/work/tmp/azure-management-docs/articles/azure-arc/kubernetes/conceptual-gitops-flux2-ci-cd.md",
    "section": [
      "CI/CD workflow using GitOps (Flux v2)",
      "Architecture",
      "CD pipeline"
    ],
    "has_embedding": false
  },
  "timestamp": "2025-06-02T15:36:21.786903"
}