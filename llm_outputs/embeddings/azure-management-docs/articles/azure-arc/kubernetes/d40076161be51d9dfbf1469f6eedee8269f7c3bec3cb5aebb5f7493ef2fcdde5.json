{
  "data": {
    "content": "### Create workload identity credentials\n\nTo set up new workload identity credentials, follow these steps:\n\n1. Retrieve the OIDC issuer URL for your [AKS cluster](/azure/aks/workload-identity-deploy-cluster#retrieve-the-oidc-issuer-url) or [Arc-enabled Kubernetes cluster](workload-identity.md#retrieve-the-oidc-issuer-url).\n1. Create a [managed identity](/azure/aks/workload-identity-deploy-cluster#create-a-managed-identity) and note its client ID and tenant ID.\n1. Establish a federated identity credential for your [AKS cluster](/azure/aks/workload-identity-deploy-cluster#establish-federated-identity-credential) or [Arc-enabled Kubernetes cluster](workload-identity.md#create-the-federated-identity-credential). For example:\n\n   ```azurecli\n   # For source-controller\n   az identity federated-credential create --name ${FEDERATED_IDENTITY_CREDENTIAL_NAME} --identity-name \"${USER_ASSIGNED_IDENTITY_NAME}\" --resource-group \"${RESOURCE_GROUP}\" --issuer \"${OIDC_ISSUER}\" --subject system:serviceaccount:\"argocd\":\"source-controller\" --audience api://AzureADTokenExchange\n   ```\n\n1. Be sure to provide proper permissions for workload identity for the resource that you want source-controller or image-reflector controller to pull. For example, if using Azure Container Registry, ensure either `Container Registry Repository Reader` (for [ABAC-enabled registries](../../container-registry/container-registry-rbac-abac-repository-permissions.md)) or `AcrPull` (for non-ABAC registries) has been applied.",
    "file_path": "/Users/cloudchase/Desktop/Vibe_Coding/Cursor/ai-content-developer/work/tmp/azure-management-docs/articles/azure-arc/kubernetes/tutorial-use-gitops-argocd.md",
    "heading_path": [
      "Tutorial: Deploy applications using GitOps with ArgoCD",
      "Create GitOps (ArgoCD) extension with workload identity",
      "Create workload identity credentials"
    ],
    "section_level": 3,
    "chunk_index": 11,
    "frontmatter": {
      "title": "Tutorial: Deploy applications using GitOps",
      "description": "This tutorial shows how to use GitOps with ArgoCD in Azure Arc and AKS clusters.",
      "ms.date": "04/06/2025",
      "ms.topic": "tutorial",
      "ms.custom": "template-tutorial, devx-track-azurecli, references_regions"
    },
    "embedding_content": "Document: Tutorial: Deploy applications using GitOps | Topic: tutorial | Description: This tutorial shows how to use GitOps with ArgoCD in Azure Arc and AKS clusters. | Section: Tutorial: Deploy applications using GitOps with ArgoCD > Create GitOps (ArgoCD) extension with workload identity > Create workload identity credentials | ### Create workload identity credentials\n\nTo set up new workload identity credentials, follow these steps:\n\n1. Retrieve the OIDC issuer URL for your [AKS cluster](/azure/aks/workload-identity-deploy-cluster#retrieve-the-oidc-issuer-url) or [Arc-enabled Kubernetes cluster](workload-identity.md#retrieve-the-oidc-issuer-url).\n1. Create a [managed identity](/azure/aks/workload-identity-deploy-cluster#create-a-managed-identity) and note its client ID and tenant ID.\n1. Establish a federated identity credential for your [AKS cluster](/azure/aks/workload-identity-deploy-cluster#establish-federated-identity-credential) or [Arc-enabled Kubernetes cluster](workload-identity.md#create-the-federated-identity-credential). For example:\n\n   ```azurecli\n   # For source-controller\n   az identity federated-credential create --name ${FEDERATED_IDENTITY_CREDENTIAL_NAME} --identity-name \"${USER_ASSIGNED_IDENTITY_NAME}\" --resource-group \"${RESOURCE_GROUP}\" --issuer \"${OIDC_ISSUER}\" --subject system:serviceaccount:\"argocd\":\"source-controller\" --audience api://AzureADTokenExchange\n   ```\n\n1. Be sure to provide proper permissions for workload identity for the resource that you want source-controller or image-reflector controller to pull. For example, if using Azure Container Registry, ensure either `Container Registry Repository Reader` (for [ABAC-enabled registries](../../container-registry/container-registry-rbac-abac-repository-permissions.md)) or `AcrPull` (for non-ABAC registries) has been applied.",
    "embedding": null,
    "embedding_model": null,
    "embedding_generated_at": null,
    "content_hash": "22097e18e92cc95e5a67924c279ba2fd42dabf46c96d617ba2773d7ea125216a",
    "file_id": "40afb2683704ffdcb5f7624f02b0a312ff2bac5d8767707e99ce1c3873aa09da",
    "chunk_id": "d40076161be51d9dfbf1469f6eedee8269f7c3bec3cb5aebb5f7493ef2fcdde5",
    "prev_chunk_id": "0f134119eb4b7d27e746e3ddbbc8cb48028c4154c8c03e06d0eb4a22565706ae",
    "next_chunk_id": "6329d32977524cb5a1a7f91ef06a98a49d79f3d0ea29fc0365c96ae74212a313",
    "parent_heading_chunk_id": "fd9779aa14210b884344a960476c1f861578836e08884f15f67dc73ae7a0c50f",
    "total_chunks_in_file": 18
  },
  "meta": {
    "type": "chunk",
    "file": "/Users/cloudchase/Desktop/Vibe_Coding/Cursor/ai-content-developer/work/tmp/azure-management-docs/articles/azure-arc/kubernetes/tutorial-use-gitops-argocd.md",
    "section": [
      "Tutorial: Deploy applications using GitOps with ArgoCD",
      "Create GitOps (ArgoCD) extension with workload identity",
      "Create workload identity credentials"
    ],
    "has_embedding": false
  },
  "timestamp": "2025-06-02T15:36:19.462385"
}