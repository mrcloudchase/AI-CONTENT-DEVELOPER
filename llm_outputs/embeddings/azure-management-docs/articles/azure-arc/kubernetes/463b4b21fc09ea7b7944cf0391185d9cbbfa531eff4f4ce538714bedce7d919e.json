{
  "data": {
    "content": "### [Azure CLI](#tab/azure-cli)\n\n1. On the deployment machine, set the environment variables needed for Azure CLI to use the outbound proxy server:\n\n    ```bash\n    export HTTP_PROXY=<proxy-server-ip-address>:<port>\n    export HTTPS_PROXY=<proxy-server-ip-address>:<port>\n    export NO_PROXY=<cluster-apiserver-ip-address>:<port>\n    ```\n\n2. On the Kubernetes cluster, run the connect command with the `proxy-https` and `proxy-http` parameters specified. If your proxy server is set up with both HTTP and HTTPS, be sure to use `--proxy-http` for the HTTP proxy and `--proxy-https` for the HTTPS proxy. If your proxy server only uses HTTP, you can use that value for both parameters.\n\n    ```azurecli\n    az connectedk8s connect --name <cluster-name> --resource-group <resource-group> --proxy-https https://<proxy-server-ip-address>:<port> --proxy-http http://<proxy-server-ip-address>:<port> --proxy-skip-range <excludedIP>,<excludedCIDR> --proxy-cert <path-to-cert-file>\n    ```\n\n> [!NOTE]\n>\n> * Some network requests such as the ones involving in-cluster service-to-service communication need to be separated from the traffic that is routed via the proxy server for outbound communication. The `--proxy-skip-range` parameter can be used to specify the CIDR range and endpoints in a comma-separated way so that any communication from the agents to these endpoints do not go via the outbound proxy. At a minimum, the CIDR range of the services in the cluster should be specified as value for this parameter. For example, let's say `kubectl get svc -A` returns a list of services where all the services have ClusterIP values in the range `10.0.0.0/16`. Then the value to specify for `--proxy-skip-range` is `10.0.0.0/16,kubernetes.default.svc,.svc.cluster.local,.svc`.\n> * `--proxy-http`, `--proxy-https`, and `--proxy-skip-range` are expected for most outbound proxy environments. `--proxy-cert` is *only* required if you need to inject trusted certificates expected by proxy into the trusted certificate store of agent pods.\n> * The outbound proxy has to be configured to allow websocket connections.\n\nFor outbound proxy servers, if you're only providing a trusted certificate, you can run `az connectedk8s connect` with just the `--proxy-cert` parameter specified:\n\n```azurecli\naz connectedk8s connect --name <cluster-name> --resource-group <resource-group> --proxy-cert <path-to-cert-file>\n```\n\nIf there are multiple trusted certificates, then the certificate chain (Leaf cert, Intermediate cert, Root cert) needs to be combined into a single file which is passed in the `--proxy-cert` parameter.\n\n> [!NOTE]\n>\n> * `--custom-ca-cert` is an alias for `--proxy-cert`. Either parameter can be used interchangeably. Passing both parameters in the same command will honor the one passed last.",
    "file_path": "/Users/cloudchase/Desktop/Vibe_Coding/Cursor/ai-content-developer/work/tmp/azure-management-docs/articles/azure-arc/kubernetes/quickstart-connect-cluster.md",
    "heading_path": [
      "Quickstart: Connect an existing Kubernetes cluster to Azure Arc",
      "Connect using an outbound proxy server",
      "[Azure CLI](#tab/azure-cli)"
    ],
    "section_level": 3,
    "chunk_index": 14,
    "frontmatter": {
      "title": "Quickstart: Connect an existing Kubernetes cluster to Azure Arc",
      "description": "In this quickstart, you learn how to connect an Azure Arc-enabled Kubernetes cluster.",
      "ms.topic": "quickstart",
      "ms.date": "10/08/2024",
      "ms.custom": "template-quickstart, mode-other, devx-track-azurecli, devx-track-azurepowershell",
      "ms.devlang": "azurecli"
    },
    "embedding_content": "Document: Quickstart: Connect an existing Kubernetes cluster to Azure Arc | Topic: quickstart | Description: In this quickstart, you learn how to connect an Azure Arc-enabled Kubernetes cluster. | Section: Quickstart: Connect an existing Kubernetes cluster to Azure Arc > Connect using an outbound proxy server > [Azure CLI](#tab/azure-cli) | ### [Azure CLI](#tab/azure-cli)\n\n1. On the deployment machine, set the environment variables needed for Azure CLI to use the outbound proxy server:\n\n    ```bash\n    export HTTP_PROXY=<proxy-server-ip-address>:<port>\n    export HTTPS_PROXY=<proxy-server-ip-address>:<port>\n    export NO_PROXY=<cluster-apiserver-ip-address>:<port>\n    ```\n\n2. On the Kubernetes cluster, run the connect command with the `proxy-https` and `proxy-http` parameters specified. If your proxy server is set up with both HTTP and HTTPS, be sure to use `--proxy-http` for the HTTP proxy and `--proxy-https` for the HTTPS proxy. If your proxy server only uses HTTP, you can use that value for both parameters.\n\n    ```azurecli\n    az connectedk8s connect --name <cluster-name> --resource-group <resource-group> --proxy-https https://<proxy-server-ip-address>:<port> --proxy-http http://<proxy-server-ip-address>:<port> --proxy-skip-range <excludedIP>,<excludedCIDR> --proxy-cert <path-to-cert-file>\n    ```\n\n> [!NOTE]\n>\n> * Some network requests such as the ones involving in-cluster service-to-service communication need to be separated from the traffic that is routed via the proxy server for outbound communication. The `--proxy-skip-range` parameter can be used to specify the CIDR range and endpoints in a comma-separated way so that any communication from the agents to these endpoints do not go via the outbound proxy. At a minimum, the CIDR range of the services in the cluster should be specified as value for this parameter. For example, let's say `kubectl get svc -A` returns a list of services where all the services have ClusterIP values in the range `10.0.0.0/16`. Then the value to specify for `--proxy-skip-range` is `10.0.0.0/16,kubernetes.default.svc,.svc.cluster.local,.svc`.\n> * `--proxy-http`, `--proxy-https`, and `--proxy-skip-range` are expected for most outbound proxy environments. `--proxy-cert` is *only* required if you need to inject trusted certificates expected by proxy into the trusted certificate store of agent pods.\n> * The outbound proxy has to be configured to allow websocket connections.\n\nFor outbound proxy servers, if you're only providing a trusted certificate, you can run `az connectedk8s connect` with just the `--proxy-cert` parameter specified:\n\n```azurecli\naz connectedk8s connect --name <cluster-name> --resource-group <resource-group> --proxy-cert <path-to-cert-file>\n```\n\nIf there are multiple trusted certificates, then the certificate chain (Leaf cert, Intermediate cert, Root cert) needs to be combined into a single file which is passed in the `--proxy-cert` parameter.\n\n> [!NOTE]\n>\n> * `--custom-ca-cert` is an alias for `--proxy-cert`. Either parameter can be used interchangeably. Passing both parameters in the same command will honor the one passed last.",
    "embedding": null,
    "embedding_model": null,
    "embedding_generated_at": null,
    "content_hash": "0d8dffa1851733e50c452ab2a93efdd64eb2f92cb3862bd93b7d8b791c91a64f",
    "file_id": "735963f300c1abf1619bc2b62f54d9460d177722221a1d11d420143a96bbeeae",
    "chunk_id": "463b4b21fc09ea7b7944cf0391185d9cbbfa531eff4f4ce538714bedce7d919e",
    "prev_chunk_id": "5fe5431d5db22bd859db8697224f8648e03f0afaad58ba2bb18af31e195fb5b6",
    "next_chunk_id": "26d197ce9766432ba9414f76fedf2654a5f025d8e076da4a7dc7bfb4e8ea9d57",
    "parent_heading_chunk_id": "80ca9c0d0fa95d0c236b5ddaa251f6a5d6f48bcfbc4f0b5813ac938877845fce",
    "total_chunks_in_file": 24
  },
  "meta": {
    "type": "chunk",
    "file": "/Users/cloudchase/Desktop/Vibe_Coding/Cursor/ai-content-developer/work/tmp/azure-management-docs/articles/azure-arc/kubernetes/quickstart-connect-cluster.md",
    "section": [
      "Quickstart: Connect an existing Kubernetes cluster to Azure Arc",
      "Connect using an outbound proxy server",
      "[Azure CLI](#tab/azure-cli)"
    ],
    "has_embedding": false
  },
  "timestamp": "2025-06-02T15:36:20.437076"
}