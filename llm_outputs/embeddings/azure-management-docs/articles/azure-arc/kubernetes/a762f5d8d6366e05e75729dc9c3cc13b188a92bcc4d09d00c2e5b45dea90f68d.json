{
  "data": {
    "content": "### [Azure portal](#tab/azure-portal)\n\nThe Azure portal is useful for managing GitOps configurations and the Flux extension in Azure Arc-enabled Kubernetes or AKS clusters. In the Azure portal, you can see all of the Flux configurations associated with each cluster and get detailed information, including the overall compliance state of each cluster.\n\n> [!NOTE]\n> Some options aren't currently supported in the Azure portal, such as suspending continuous reconciliation, controlling which controllers are deployed with the Flux cluster extension, and using Kubelet identity as authentication method for AKS clusters. To use these options, see the Azure CLI steps.\n\nFollow these steps to apply a sample Flux configuration to a cluster. As part of this process, Azure installs the `microsoft.flux` extension on the cluster, if it wasn't already installed in a previous deployment.\n\n1. Navigate to your cluster in the Azure portal.\n1. From the service menu, under **Settings**, select **GitOps**.\n1. Select **Create**.\n1. In the **Basics** section:\n\n   1. Enter a name for the configuration.\n   1. Enter the namespace within which to install the Flux custom resources. You can use an existing namespace, or specify a new one to be created when the configuration is deployed.\n   1. Under **Scope**, select **Cluster** so that the Flux operator has access to apply the configuration to all namespaces in the cluster. To use `namespace` scope with this tutorial, [see the changes needed](conceptual-gitops-flux2.md#multi-tenancy).\n   1. Select **Next** to continue to the **Source** section.\n\n   :::image type=\"content\" source=\"media/tutorial-use-gitops-flux2/portal-configuration-basics.png\" alt-text=\"Screenshot showing the Basics options for a GitOps configuration in the Azure portal.\" :::\n\n1. In the **Source** section:\n\n   1. In **Source type**, select **Git Repository.**\n   1. Enter the URL for the repository where the Kubernetes manifests are located: `https://github.com/Azure/gitops-flux2-kustomize-helm-mt`.\n   1. For reference type, select **Branch**. Leave **Branch** set to **main**.\n   1. For **Repository type**, select **Public**.\n   1. Leave the other options set to the default, then select **Next**.\n\n   :::image type=\"content\" source=\"media/tutorial-use-gitops-flux2/portal-configuration-source.png\" alt-text=\"Screenshow showing the Source options for a GitOps configuration in the Azure portal.\" :::\n\n1. In the **Kustomizations** section, create two [kustomizations](gitops-flux2-parameters.md#kustomization): `infrastructure` and `staging`. These kustomizations are Flux resources, each associated with a path in the repository, that represent the set of manifests that Flux should reconcile to the cluster.\n\n   1. Select **Create**.\n   1. In the **Create a Kustomization** screen:",
    "file_path": "/Users/cloudchase/Desktop/Vibe_Coding/Cursor/ai-content-developer/work/tmp/azure-management-docs/articles/azure-arc/kubernetes/tutorial-use-gitops-flux2.md",
    "heading_path": [
      "Tutorial: Deploy applications using GitOps with Flux v2",
      "Apply a Flux configuration",
      "[Azure portal](#tab/azure-portal)"
    ],
    "section_level": 3,
    "chunk_index": 23,
    "frontmatter": {
      "title": "Tutorial: Deploy applications using GitOps with Flux v2",
      "description": "This tutorial shows how to use GitOps with Flux v2 to manage configuration and application deployment in Azure Arc and AKS clusters.",
      "ms.date": "03/26/2025",
      "ms.topic": "tutorial",
      "ms.custom": "template-tutorial, devx-track-azurecli, references_regions"
    },
    "embedding_content": "Document: Tutorial: Deploy applications using GitOps with Flux v2 | Topic: tutorial | Description: This tutorial shows how to use GitOps with Flux v2 to manage configuration and application deploymen | Section: Tutorial: Deploy applications using GitOps with Flux v2 > Apply a Flux configuration > [Azure portal](#tab/azure-portal) | ### [Azure portal](#tab/azure-portal)\n\nThe Azure portal is useful for managing GitOps configurations and the Flux extension in Azure Arc-enabled Kubernetes or AKS clusters. In the Azure portal, you can see all of the Flux configurations associated with each cluster and get detailed information, including the overall compliance state of each cluster.\n\n> [!NOTE]\n> Some options aren't currently supported in the Azure portal, such as suspending continuous reconciliation, controlling which controllers are deployed with the Flux cluster extension, and using Kubelet identity as authentication method for AKS clusters. To use these options, see the Azure CLI steps.\n\nFollow these steps to apply a sample Flux configuration to a cluster. As part of this process, Azure installs the `microsoft.flux` extension on the cluster, if it wasn't already installed in a previous deployment.\n\n1. Navigate to your cluster in the Azure portal.\n1. From the service menu, under **Settings**, select **GitOps**.\n1. Select **Create**.\n1. In the **Basics** section:\n\n   1. Enter a name for the configuration.\n   1. Enter the namespace within which to install the Flux custom resources. You can use an existing namespace, or specify a new one to be created when the configuration is deployed.\n   1. Under **Scope**, select **Cluster** so that the Flux operator has access to apply the configuration to all namespaces in the cluster. To use `namespace` scope with this tutorial, [see the changes needed](conceptual-gitops-flux2.md#multi-tenancy).\n   1. Select **Next** to continue to the **Source** section.\n\n   :::image type=\"content\" source=\"media/tutorial-use-gitops-flux2/portal-configuration-basics.png\" alt-text=\"Screenshot showing the Basics options for a GitOps configuration in the Azure portal.\" :::\n\n1. In the **Source** section:\n\n   1. In **Source type**, select **Git Repository.**\n   1. Enter the URL for the repository where the Kubernetes manifests are located: `https://github.com/Azure/gitops-flux2-kustomize-helm-mt`.\n   1. For reference type, select **Branch**. Leave **Branch** set to **main**.\n   1. For **Repository type**, select **Public**.\n   1. Leave the other options set to the default, then select **Next**.\n\n   :::image type=\"content\" source=\"media/tutorial-use-gitops-flux2/portal-configuration-source.png\" alt-text=\"Screenshow showing the Source options for a GitOps configuration in the Azure portal.\" :::\n\n1. In the **Kustomizations** section, create two [kustomizations](gitops-flux2-parameters.md#kustomization): `infrastructure` and `staging`. These kustomizations are Flux resources, each associated with a path in the repository, that represent the set of manifests that Flux should reconcile to the cluster.\n\n   1. Select **Create**.\n   1. In the **Create a Kustomization** screen:",
    "embedding": null,
    "embedding_model": null,
    "embedding_generated_at": null,
    "content_hash": "0c95dcad016236e7b6c3c54de59f32099dd7093f1b73e74e7c5bef64e07a6c99",
    "file_id": "e86c9f8524b4e2887fafe4602021952640d48b815217386227741e43a048021a",
    "chunk_id": "a762f5d8d6366e05e75729dc9c3cc13b188a92bcc4d09d00c2e5b45dea90f68d",
    "prev_chunk_id": "3de05492643b6dddb7628a43a8d1124c740806f606686cbdea0c9cd5a645392f",
    "next_chunk_id": "6f532dc9932e41a72f86c9f22661a2fc62156f44dad6fd8286cf21445c2f3db5",
    "parent_heading_chunk_id": "4bd8f43f7347b35eee3d60d624a2a62bdbd2443e436197871508e49f8e35b95a",
    "total_chunks_in_file": 51
  },
  "meta": {
    "type": "chunk",
    "file": "/Users/cloudchase/Desktop/Vibe_Coding/Cursor/ai-content-developer/work/tmp/azure-management-docs/articles/azure-arc/kubernetes/tutorial-use-gitops-flux2.md",
    "section": [
      "Tutorial: Deploy applications using GitOps with Flux v2",
      "Apply a Flux configuration",
      "[Azure portal](#tab/azure-portal)"
    ],
    "has_embedding": false
  },
  "timestamp": "2025-06-03T19:17:34.251700"
}