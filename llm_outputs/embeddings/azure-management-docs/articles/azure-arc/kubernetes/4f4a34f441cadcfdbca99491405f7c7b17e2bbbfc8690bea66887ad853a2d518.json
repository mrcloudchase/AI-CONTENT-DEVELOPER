{
  "data": {
    "content": "### Create a `SecretProviderClass` resource\n\nThe `SecretProviderClass` resource is used to define the connection to the Azure Key Vault, the identity to use to access the vault, which secrets to synchronize, and the number of versions of each secret to retain locally.\n\nYou need a separate `SecretProviderClass` for each Azure Key Vault you intend to synchronize, for each identity used for access to an Azure Key Vault, and for each target Kubernetes namespace.\n\nCreate one or more `SecretProviderClass` YAML files with the appropriate values for your Key Vault and secrets by following this example.\n\n``` yaml\ncat <<EOF > spc.yaml\napiVersion: secrets-store.csi.x-k8s.io/v1\nkind: SecretProviderClass\nmetadata:\n  name: secret-provider-class-name                      # Name of the class; must be unique per Kubernetes namespace\n  namespace: ${KUBERNETES_NAMESPACE}                    # Kubernetes namespace to make the secrets accessible in\nspec:\n  provider: azure\n  parameters:\n    clientID: \"${USER_ASSIGNED_CLIENT_ID}\"               # Managed Identity Client ID for accessing the Azure Key Vault with.\n    keyvaultName: ${KEYVAULT_NAME}                       # The name of the Azure Key Vault to synchronize secrets from.\n    objects: |\n      array:\n        - |\n          objectName: ${KEYVAULT_SECRET_NAME}            # The name of the secret to sychronize.\n          objectType: secret\n          objectVersionHistory: 2                       # [optional] The number of versions to synchronize, starting from latest.\n    tenantID: \"${AZURE_TENANT_ID}\"                       # The tenant ID of the Key Vault \nEOF\n```",
    "file_path": "/Users/cloudchase/Desktop/Vibe_Coding/Cursor/ai-content-developer/work/tmp/azure-management-docs/articles/azure-arc/kubernetes/secret-store-extension.md",
    "heading_path": [
      "Use the Secret Store extension to fetch secrets for offline access in Azure Arc-enabled Kubernetes clusters",
      "Configure the SSE",
      "Create a `SecretProviderClass` resource"
    ],
    "section_level": 3,
    "chunk_index": 13,
    "frontmatter": {
      "title": "Use the Azure Key Vault Secret Store extension to sync secrets to the Kubernetes secret store for offline access in Azure Arc-enabled Kubernetes clusters",
      "description": "The Azure Key Vault Secret Store extension for Kubernetes (\"SSE\") automatically synchronizes secrets from an Azure Key Vault to a Kubernetes cluster for offline access.",
      "ms.date": "09/26/2024",
      "ms.topic": "how-to",
      "ms.custom": "references_regions, ignite-2024"
    },
    "embedding_content": "Document: Use the Azure Key Vault Secret Store extension to sync secrets to the Kubernetes secret store for offline access in Azure Arc-enabled Kubernetes clusters | Topic: how-to | Description: The Azure Key Vault Secret Store extension for Kubernetes (\"SSE\") automatically synchronizes secrets | Section: Use the Secret Store extension to fetch secrets for offline access in Azure Arc-enabled Kubernetes clusters > Configure the SSE > Create a `SecretProviderClass` resource | ### Create a `SecretProviderClass` resource\n\nThe `SecretProviderClass` resource is used to define the connection to the Azure Key Vault, the identity to use to access the vault, which secrets to synchronize, and the number of versions of each secret to retain locally.\n\nYou need a separate `SecretProviderClass` for each Azure Key Vault you intend to synchronize, for each identity used for access to an Azure Key Vault, and for each target Kubernetes namespace.\n\nCreate one or more `SecretProviderClass` YAML files with the appropriate values for your Key Vault and secrets by following this example.\n\n``` yaml\ncat <<EOF > spc.yaml\napiVersion: secrets-store.csi.x-k8s.io/v1\nkind: SecretProviderClass\nmetadata:\n  name: secret-provider-class-name                      # Name of the class; must be unique per Kubernetes namespace\n  namespace: ${KUBERNETES_NAMESPACE}                    # Kubernetes namespace to make the secrets accessible in\nspec:\n  provider: azure\n  parameters:\n    clientID: \"${USER_ASSIGNED_CLIENT_ID}\"               # Managed Identity Client ID for accessing the Azure Key Vault with.\n    keyvaultName: ${KEYVAULT_NAME}                       # The name of the Azure Key Vault to synchronize secrets from.\n    objects: |\n      array:\n        - |\n          objectName: ${KEYVAULT_SECRET_NAME}            # The name of the secret to sychronize.\n          objectType: secret\n          objectVersionHistory: 2                       # [optional] The number of versions to synchronize, starting from latest.\n    tenantID: \"${AZURE_TENANT_ID}\"                       # The tenant ID of the Key Vault \nEOF\n```",
    "embedding": null,
    "embedding_model": null,
    "embedding_generated_at": null,
    "content_hash": "634a11fe6dc52ca4f1fa728ddf38e4ef7f2f44938f4d016b9a206b6922172fbb",
    "file_id": "5b880508d2c3419668daf37d0ffb257e9268a80b1899afb8daa2f62b08b56d1e",
    "chunk_id": "4f4a34f441cadcfdbca99491405f7c7b17e2bbbfc8690bea66887ad853a2d518",
    "prev_chunk_id": "9d5ef7f86d06d0971971081da29c982e55fc51b994667fa008323ab0175281db",
    "next_chunk_id": "c63afc3ca7a7f32249bb52ce99cc2e4e73b764cb2d7422244e4e89ceadb154e6",
    "parent_heading_chunk_id": "1bd0cfde61025bfae1dd2e2c5b4fb7bb1ef18fc2e302114c0694b35fa8fb9e95",
    "total_chunks_in_file": 29
  },
  "meta": {
    "type": "chunk",
    "file": "/Users/cloudchase/Desktop/Vibe_Coding/Cursor/ai-content-developer/work/tmp/azure-management-docs/articles/azure-arc/kubernetes/secret-store-extension.md",
    "section": [
      "Use the Secret Store extension to fetch secrets for offline access in Azure Arc-enabled Kubernetes clusters",
      "Configure the SSE",
      "Create a `SecretProviderClass` resource"
    ],
    "has_embedding": false
  },
  "timestamp": "2025-06-03T19:17:35.403024"
}