{
  "data": {
    "content": "### [Azure CLI](#tab/azure-cli)\n\n1. Ensure your environment meets all of the [required prerequisites for Azure Arc-enabled Kubernetes](/azure/azure-arc/kubernetes/quickstart-connect-cluster?tabs=azure-cli#connect-using-an-outbound-proxy-server). Since you're using Azure Arc gateway, you don't need to meet the full set of network requirements.\n1. On the deployment machine, set the environment variables needed for Azure CLI to use the outbound proxy server:\n\n   `export HTTP_PROXY=<proxy-server-ip-address>:<port>`\n   `export HTTPS_PROXY=<proxy-server-ip-address>:<port>`\n   `export NO_PROXY=<cluster-apiserver-ip-address>:<port>`\n\n1. On the Kubernetes cluster, run the connect command with the\u202f`proxy-https`\u202fand\u202f`proxy-http`\u202fparameters specified. If your proxy server is set up with both HTTP and HTTPS, be sure to use\u202f`--proxy-http`\u202ffor the HTTP proxy and\u202f`--proxy-https`\u202ffor the HTTPS proxy. If your proxy server only uses HTTP, you can use that value for both parameters.\n\n   `az connectedk8s connect -g <resource_group> -n <cluster_name> --gateway-resource-id <gateway_resource_id> --proxy-https <proxy_value> --proxy-http http://<proxy-server-ip-address>:<port> --proxy-skip-range <excludedIP>,<excludedCIDR> --location <region>`\n\n   > [!NOTE]\n   >\n   > Some network requests, such as those involving in-cluster service-to-service communication, must be separated from traffic that's routed via the proxy server for outbound communication. The `--proxy-skip-range` parameter can be used to specify the CIDR range and endpoints in a comma-separated way, so that communication from the agents to these endpoints doesn't go via the outbound proxy. At a minimum, the CIDR range of the services in the cluster should be specified as value for this parameter. For example, if `kubectl get svc -A` returns a list of services where all the services have `ClusterIP` values in the range `10.0.0.0/16`, then the value to specify for `--proxy-skip-range` is `10.0.0.0/16,kubernetes.default.svc,.svc.cluster.local,.svc`.\n   >\n   > `--proxy-http`, `--proxy-https`, and `--proxy-skip-range` are expected for most outbound proxy environments. `--proxy-cert` is only required if you need to inject trusted certificates expected by proxy into the trusted certificate store of agent pods.\n   >\n   > The outbound proxy has to be configured to allow websocket connections.",
    "file_path": "/Users/cloudchase/Desktop/Vibe_Coding/Cursor/ai-content-developer/work/tmp/azure-management-docs/articles/azure-arc/kubernetes/arc-gateway-simplify-networking.md",
    "heading_path": [
      "Simplify network configuration requirements with Azure Arc Gateway (preview)",
      "Onboard Kubernetes clusters to Azure Arc with your Arc gateway resource",
      "[Azure CLI](#tab/azure-cli)"
    ],
    "section_level": 3,
    "chunk_index": 8,
    "frontmatter": {
      "title": "Simplify network configuration requirements with Azure Arc gateway (preview)",
      "ms.custom": "devx-track-azurecli",
      "ms.date": "04/22/2025",
      "ms.topic": "how-to",
      "description": "The Azure Arc gateway (preview) lets you onboard Kubernetes clusters to Azure Arc, requiring access to only seven endpoints."
    },
    "embedding_content": "Document: Simplify network configuration requirements with Azure Arc gateway (preview) | Topic: how-to | Description: The Azure Arc gateway (preview) lets you onboard Kubernetes clusters to Azure Arc, requiring access  | Section: Simplify network configuration requirements with Azure Arc Gateway (preview) > Onboard Kubernetes clusters to Azure Arc with your Arc gateway resource > [Azure CLI](#tab/azure-cli) | ### [Azure CLI](#tab/azure-cli)\n\n1. Ensure your environment meets all of the [required prerequisites for Azure Arc-enabled Kubernetes](/azure/azure-arc/kubernetes/quickstart-connect-cluster?tabs=azure-cli#connect-using-an-outbound-proxy-server). Since you're using Azure Arc gateway, you don't need to meet the full set of network requirements.\n1. On the deployment machine, set the environment variables needed for Azure CLI to use the outbound proxy server:\n\n   `export HTTP_PROXY=<proxy-server-ip-address>:<port>`\n   `export HTTPS_PROXY=<proxy-server-ip-address>:<port>`\n   `export NO_PROXY=<cluster-apiserver-ip-address>:<port>`\n\n1. On the Kubernetes cluster, run the connect command with the\u202f`proxy-https`\u202fand\u202f`proxy-http`\u202fparameters specified. If your proxy server is set up with both HTTP and HTTPS, be sure to use\u202f`--proxy-http`\u202ffor the HTTP proxy and\u202f`--proxy-https`\u202ffor the HTTPS proxy. If your proxy server only uses HTTP, you can use that value for both parameters.\n\n   `az connectedk8s connect -g <resource_group> -n <cluster_name> --gateway-resource-id <gateway_resource_id> --proxy-https <proxy_value> --proxy-http http://<proxy-server-ip-address>:<port> --proxy-skip-range <excludedIP>,<excludedCIDR> --location <region>`\n\n   > [!NOTE]\n   >\n   > Some network requests, such as those involving in-cluster service-to-service communication, must be separated from traffic that's routed via the proxy server for outbound communication. The `--proxy-skip-range` parameter can be used to specify the CIDR range and endpoints in a comma-separated way, so that communication from the agents to these endpoints doesn't go via the outbound proxy. At a minimum, the CIDR range of the services in the cluster should be specified as value for this parameter. For example, if `kubectl get svc -A` returns a list of services where all the services have `ClusterIP` values in the range `10.0.0.0/16`, then the value to specify for `--proxy-skip-range` is `10.0.0.0/16,kubernetes.default.svc,.svc.cluster.local,.svc`.\n   >\n   > `--proxy-http`, `--proxy-https`, and `--proxy-skip-range` are expected for most outbound proxy environments. `--proxy-cert` is only required if you need to inject trusted certificates expected by proxy into the trusted certificate store of agent pods.\n   >\n   > The outbound proxy has to be configured to allow websocket connections.",
    "embedding": null,
    "embedding_model": null,
    "embedding_generated_at": null,
    "content_hash": "667deedfc85f87a41dab0fde45f14e17d59eecc45cca157aadd8064184028683",
    "file_id": "03a890ed56158e1946cae5edb5e55cd80f4eba269600e5427088ac697a1c14da",
    "chunk_id": "99a64127cd27f66c7d1a9056bfcaaedafe8e445c64b33a2841e58895aa0609ae",
    "prev_chunk_id": "ff2eef0f8014078e3272bfb1ef409dfc37963e21b91d16be917a13d3649505ee",
    "next_chunk_id": "5cdb34904786faeab7643d54210c70d5ac96413dae3e7f6d83a6d7cd8a0c5684",
    "parent_heading_chunk_id": "168a8c56f66d3f6ea63897f28b2c58b3e68c7885376267465d229e958a9166fc",
    "total_chunks_in_file": 18
  },
  "meta": {
    "type": "chunk",
    "file": "/Users/cloudchase/Desktop/Vibe_Coding/Cursor/ai-content-developer/work/tmp/azure-management-docs/articles/azure-arc/kubernetes/arc-gateway-simplify-networking.md",
    "section": [
      "Simplify network configuration requirements with Azure Arc Gateway (preview)",
      "Onboard Kubernetes clusters to Azure Arc with your Arc gateway resource",
      "[Azure CLI](#tab/azure-cli)"
    ],
    "has_embedding": false
  },
  "timestamp": "2025-06-03T19:17:34.019965"
}