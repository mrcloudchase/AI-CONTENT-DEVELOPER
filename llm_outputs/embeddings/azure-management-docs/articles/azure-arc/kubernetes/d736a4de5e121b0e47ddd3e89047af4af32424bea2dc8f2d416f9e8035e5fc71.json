{
  "data": {
    "content": "# create workload registration file\n\ncat <<EOF >workloads/hello-world-app.yaml\napiVersion: scheduler.kalypso.io/v1alpha1\nkind: WorkloadRegistration\nmetadata:\n  name: hello-world-app\n  labels:\n    type: application\nspec:\n  workload:\n    repo: https://github.com/$org/$prefix-app-src\n    branch: main\n    path: workload/\n  workspace: kaizen-app-team\nEOF\n\ngit add .\ngit commit -m 'workload registration'\ngit push\n```\n\n> [!NOTE]\n> For simplicity, this example pushes changes directly to `main`. In practice, you'd create a pull request to submit the changes.  \n\nWith that in place, the application is onboarded in the control plane. But the control plane still doesn't know how to map the application deployment targets to all of the cluster types.",
    "file_path": "/Users/cloudchase/Desktop/Vibe_Coding/Cursor/ai-content-developer/work/tmp/azure-management-docs/articles/azure-arc/kubernetes/workload-management.md",
    "heading_path": [
      "create workload registration file"
    ],
    "section_level": 1,
    "chunk_index": 7,
    "frontmatter": {
      "title": "Explore workload management in a multi-cluster environment with GitOps",
      "description": "Explore typical use-cases that Platform and Application teams face on a daily basis working with Kubernetes workloads in a multi-cluster environment.",
      "keywords": "GitOps, Flux, Kubernetes, K8s, Azure, Arc, AKS, ci/cd, devops",
      "author": "eedorenko",
      "ms.author": "iefedore",
      "ms.topic": "how-to",
      "ms.date": "03/29/2023"
    },
    "embedding_content": "Document: Explore workload management in a multi-cluster environment with GitOps | Topic: how-to | Description: Explore typical use-cases that Platform and Application teams face on a daily basis working with Kub | Section: create workload registration file | # create workload registration file\n\ncat <<EOF >workloads/hello-world-app.yaml\napiVersion: scheduler.kalypso.io/v1alpha1\nkind: WorkloadRegistration\nmetadata:\n  name: hello-world-app\n  labels:\n    type: application\nspec:\n  workload:\n    repo: https://github.com/$org/$prefix-app-src\n    branch: main\n    path: workload/\n  workspace: kaizen-app-team\nEOF\n\ngit add .\ngit commit -m 'workload registration'\ngit push\n```\n\n> [!NOTE]\n> For simplicity, this example pushes changes directly to `main`. In practice, you'd create a pull request to submit the changes.  \n\nWith that in place, the application is onboarded in the control plane. But the control plane still doesn't know how to map the application deployment targets to all of the cluster types.",
    "embedding": null,
    "embedding_model": null,
    "embedding_generated_at": null,
    "content_hash": "803dfee66573c12939934a42c8a5182b83042e12e3357890086c8638fb119642",
    "file_id": "860938b8acc2edaecb7d029e76e899735c706b1e333677a4f8a2ac5adf75a619",
    "chunk_id": "d736a4de5e121b0e47ddd3e89047af4af32424bea2dc8f2d416f9e8035e5fc71",
    "prev_chunk_id": "d149a4814248b9ba42290232454d8c8736ee3ab8c0efbca63c7a3f9f472ada58",
    "next_chunk_id": "b074b89138463dd6e60bd9decc8780f73834f378af72e7274921ea8558e3ed0e",
    "parent_heading_chunk_id": null,
    "total_chunks_in_file": 32
  },
  "meta": {
    "type": "chunk",
    "file": "/Users/cloudchase/Desktop/Vibe_Coding/Cursor/ai-content-developer/work/tmp/azure-management-docs/articles/azure-arc/kubernetes/workload-management.md",
    "section": [
      "create workload registration file"
    ],
    "has_embedding": false
  },
  "timestamp": "2025-06-02T15:36:19.500154"
}