{
  "data": {
    "content": "### CI pipeline\n\nThe application CI pipeline runs all the PR pipeline steps, expanding the testing and deployment checks. The pipeline can be run for each commit to main, or it can run at a regular cadence with a group of commits.\n\nAt this stage, application tests that are too consuming for the PR pipeline can be performed, including:\n\n* Pushing images to container registry\n* Image building, linting, and testing\n* Template generation of raw YAML files\n\nBy the end of the CI build, artifacts are generated. These artifacts can be used by the CD step to consume in preparation for deployment.",
    "file_path": "/Users/cloudchase/Desktop/Vibe_Coding/Cursor/ai-content-developer/work/tmp/azure-management-docs/articles/azure-arc/kubernetes/conceptual-gitops-flux2-ci-cd.md",
    "heading_path": [
      "CI/CD workflow using GitOps (Flux v2)",
      "Architecture",
      "CI pipeline"
    ],
    "section_level": 3,
    "chunk_index": 5,
    "frontmatter": {
      "title": "CI/CD Workflow using GitOps (Flux v2) - Azure Arc-enabled Kubernetes",
      "description": "This article provides a conceptual overview of a CI/CD workflow using GitOps.",
      "ms.date": "04/22/2025",
      "ms.topic": "concept-article",
      "author": "eedorenko",
      "ms.author": "iefedore"
    },
    "embedding_content": "Document: CI/CD Workflow using GitOps (Flux v2) - Azure Arc-enabled Kubernetes | Topic: concept-article | Description: This article provides a conceptual overview of a CI/CD workflow using GitOps. | Section: CI/CD workflow using GitOps (Flux v2) > Architecture > CI pipeline | ### CI pipeline\n\nThe application CI pipeline runs all the PR pipeline steps, expanding the testing and deployment checks. The pipeline can be run for each commit to main, or it can run at a regular cadence with a group of commits.\n\nAt this stage, application tests that are too consuming for the PR pipeline can be performed, including:\n\n* Pushing images to container registry\n* Image building, linting, and testing\n* Template generation of raw YAML files\n\nBy the end of the CI build, artifacts are generated. These artifacts can be used by the CD step to consume in preparation for deployment.",
    "embedding": null,
    "embedding_model": null,
    "embedding_generated_at": null,
    "content_hash": "e79d76f46e0270bacbd128ec715e710c4c4710f54c85e4540cb2031a3bf9a364",
    "file_id": "c034872bae0e1b385c7013c870cafa2b3fd327c006d451d059a4fed1eeb95586",
    "chunk_id": "badd2c751fbb2a05d3a43e728df82cb12163770bad383c3a460a2e3ae9f0968e",
    "prev_chunk_id": "8c9c54758229799fde4e0e6e55c16ebccbfae617fac798a5a32545300bae814b",
    "next_chunk_id": "617873ada3af43f4636e7290b6a8d9852044fedcff6d3da2d24b27b792fda4b8",
    "parent_heading_chunk_id": "6e654ec708ade78cfdb424c4fdddf4c0f1e0c4fc7f495781f3404001c9997a60",
    "total_chunks_in_file": 13
  },
  "meta": {
    "type": "chunk",
    "file": "/Users/cloudchase/Desktop/Vibe_Coding/Cursor/ai-content-developer/work/tmp/azure-management-docs/articles/azure-arc/kubernetes/conceptual-gitops-flux2-ci-cd.md",
    "section": [
      "CI/CD workflow using GitOps (Flux v2)",
      "Architecture",
      "CI pipeline"
    ],
    "has_embedding": false
  },
  "timestamp": "2025-06-02T15:36:21.746510"
}