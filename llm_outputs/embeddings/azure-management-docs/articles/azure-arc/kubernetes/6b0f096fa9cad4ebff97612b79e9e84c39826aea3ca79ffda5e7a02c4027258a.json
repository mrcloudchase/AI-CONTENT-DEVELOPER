{
  "data": {
    "content": "### Import application and GitOps repositories into Azure Repos\n\nImport an [application repository](conceptual-gitops-ci-cd.md#application-code-repository) and a [GitOps repository](conceptual-gitops-ci-cd.md#gitops-repository) into Azure Repos. For this tutorial, use the following example repositories:\n\n* **arc-cicd-demo-src** application repository\n  * URL: https://github.com/Azure/arc-cicd-demo-src\n  * Contains the example Azure Vote App to deploy using GitOps.\n  * Import the repository with name `arc-cicd-demo-src`\n\n* **arc-cicd-demo-gitops** GitOps repository\n  * URL: https://github.com/Azure/arc-cicd-demo-gitops\n  * Works as a base for your cluster resources that house the Azure Vote App.\n  * Import the repository with name `arc-cicd-demo-gitops`\n\nLearn more about [importing Git repositories](/azure/devops/repos/git/import-git-repository).\n\n>[!NOTE]\n> Importing and using two separate repositories for application and GitOps repositories can improve security and simplicity. The application and GitOps repositories' permissions and visibility can be tuned individually.\n> For example, the cluster administrator may not find the changes in application code relevant to the desired state of the cluster. Conversely, an application developer doesn't need to know the specific parameters for each environment - a set of test values that provide coverage for the parameters may be sufficient.",
    "file_path": "/Users/cloudchase/Desktop/Vibe_Coding/Cursor/ai-content-developer/work/tmp/azure-management-docs/articles/azure-arc/kubernetes/tutorial-gitops-flux2-ci-cd.md",
    "heading_path": [
      "Tutorial: Implement CI/CD with GitOps (Flux v2)",
      "Implement CI/CD with Azure DevOps",
      "Import application and GitOps repositories into Azure Repos"
    ],
    "section_level": 3,
    "chunk_index": 6,
    "frontmatter": {
      "title": "Tutorial: Implement CI/CD with GitOps (Flux v2)",
      "description": "This tutorial walks through setting up a CI/CD solution using GitOps (Flux v2) in Azure Arc-enabled Kubernetes or Azure Kubernetes Service clusters.",
      "author": "eedorenko",
      "ms.author": "iefedore",
      "ms.topic": "tutorial",
      "ms.date": "01/15/2025",
      "ms.custom": "template-tutorial, devx-track-azurecli"
    },
    "embedding_content": "Document: Tutorial: Implement CI/CD with GitOps (Flux v2) | Topic: tutorial | Description: This tutorial walks through setting up a CI/CD solution using GitOps (Flux v2) in Azure Arc-enabled  | Section: Tutorial: Implement CI/CD with GitOps (Flux v2) > Implement CI/CD with Azure DevOps > Import application and GitOps repositories into Azure Repos | ### Import application and GitOps repositories into Azure Repos\n\nImport an [application repository](conceptual-gitops-ci-cd.md#application-code-repository) and a [GitOps repository](conceptual-gitops-ci-cd.md#gitops-repository) into Azure Repos. For this tutorial, use the following example repositories:\n\n* **arc-cicd-demo-src** application repository\n  * URL: https://github.com/Azure/arc-cicd-demo-src\n  * Contains the example Azure Vote App to deploy using GitOps.\n  * Import the repository with name `arc-cicd-demo-src`\n\n* **arc-cicd-demo-gitops** GitOps repository\n  * URL: https://github.com/Azure/arc-cicd-demo-gitops\n  * Works as a base for your cluster resources that house the Azure Vote App.\n  * Import the repository with name `arc-cicd-demo-gitops`\n\nLearn more about [importing Git repositories](/azure/devops/repos/git/import-git-repository).\n\n>[!NOTE]\n> Importing and using two separate repositories for application and GitOps repositories can improve security and simplicity. The application and GitOps repositories' permissions and visibility can be tuned individually.\n> For example, the cluster administrator may not find the changes in application code relevant to the desired state of the cluster. Conversely, an application developer doesn't need to know the specific parameters for each environment - a set of test values that provide coverage for the parameters may be sufficient.",
    "embedding": null,
    "embedding_model": null,
    "embedding_generated_at": null,
    "content_hash": "1f4260ce72a4c2b45101151186e2928b161bb3187606aae470cbadf0843287cb",
    "file_id": "4d1229b6dc50d3a990ffdf3b851b5e2741d36a02a95ab6b0d3b14c5df8fd629c",
    "chunk_id": "6b0f096fa9cad4ebff97612b79e9e84c39826aea3ca79ffda5e7a02c4027258a",
    "prev_chunk_id": "6c05c5734bd7fe35df4f1c9da8aef976539fd2e9ffba2eab3846e9a2cbb05357",
    "next_chunk_id": "a33397ded12264187a3a3932918c0a37b58018297bbe93a667bc3f2e06bb260c",
    "parent_heading_chunk_id": "acbb58d677b190c111bc77fa91e51dfd959e8a6b02d52697a361a6d9f20a849c",
    "total_chunks_in_file": 35
  },
  "meta": {
    "type": "chunk",
    "file": "/Users/cloudchase/Desktop/Vibe_Coding/Cursor/ai-content-developer/work/tmp/azure-management-docs/articles/azure-arc/kubernetes/tutorial-gitops-flux2-ci-cd.md",
    "section": [
      "Tutorial: Implement CI/CD with GitOps (Flux v2)",
      "Implement CI/CD with Azure DevOps",
      "Import application and GitOps repositories into Azure Repos"
    ],
    "has_embedding": false
  },
  "timestamp": "2025-06-03T19:17:35.504060"
}