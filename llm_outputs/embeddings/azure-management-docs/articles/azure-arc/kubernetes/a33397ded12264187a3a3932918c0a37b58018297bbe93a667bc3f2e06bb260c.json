{
  "data": {
    "content": "### Connect the GitOps repository\n\nTo continuously deploy your app, connect the application repository to your cluster using GitOps. Your **arc-cicd-demo-gitops** GitOps repository contains the basic resources to get your app up and running on your **arc-cicd-cluster** cluster.\n\nThe initial GitOps repository contains only a [manifest](https://github.com/Azure/arc-cicd-demo-gitops/blob/master/arc-cicd-cluster/manifests/namespaces.yml) that creates the **dev** and **stage** namespaces corresponding to the deployment environments.\n\nThe GitOps connection that you create automatically syncs the manifests in the manifest directory and updates the cluster state.\n\nThe CI/CD workflow populates the manifest directory with extra manifests to deploy the app.\n\n1. [Create a new GitOps connection](./tutorial-use-gitops-flux2.md) to your newly imported **arc-cicd-demo-gitops** repository in Azure Repos.\n\n   ```azurecli\n   az k8s-configuration flux create \\\n      --name cluster-config \\\n      --cluster-name arc-cicd-cluster \\\n      --namespace flux-system \\\n      --resource-group myResourceGroup \\\n      -u https://dev.azure.com/<Your organization>/<Your project>/_git/arc-cicd-demo-gitops \\\n      --https-user <Azure Repos username> \\\n      --https-key <Azure Repos PAT token> \\\n      --scope cluster \\\n      --cluster-type connectedClusters \\\n      --branch master \\\n      --kustomization name=cluster-config prune=true path=arc-cicd-cluster/manifests\n   ```\n\n   > [!TIP]\n   > For an AKS cluster (rather than an Arc-enabled cluster), use `-cluster-type managedClusters`.\n\n1. Check the state of the deployment in Azure portal.\n   * If successful, you see both `dev` and `stage` namespaces created in your cluster.\n   * You can also confirm that on the Azure portal page of your cluster, a configuration `cluster-config` is created on the `GitOps` tab.",
    "file_path": "/Users/cloudchase/Desktop/Vibe_Coding/Cursor/ai-content-developer/work/tmp/azure-management-docs/articles/azure-arc/kubernetes/tutorial-gitops-flux2-ci-cd.md",
    "heading_path": [
      "Tutorial: Implement CI/CD with GitOps (Flux v2)",
      "Implement CI/CD with Azure DevOps",
      "Connect the GitOps repository"
    ],
    "section_level": 3,
    "chunk_index": 7,
    "frontmatter": {
      "title": "Tutorial: Implement CI/CD with GitOps (Flux v2)",
      "description": "This tutorial walks through setting up a CI/CD solution using GitOps (Flux v2) in Azure Arc-enabled Kubernetes or Azure Kubernetes Service clusters.",
      "author": "eedorenko",
      "ms.author": "iefedore",
      "ms.topic": "tutorial",
      "ms.date": "01/15/2025",
      "ms.custom": "template-tutorial, devx-track-azurecli"
    },
    "embedding_content": "Document: Tutorial: Implement CI/CD with GitOps (Flux v2) | Topic: tutorial | Description: This tutorial walks through setting up a CI/CD solution using GitOps (Flux v2) in Azure Arc-enabled  | Section: Tutorial: Implement CI/CD with GitOps (Flux v2) > Implement CI/CD with Azure DevOps > Connect the GitOps repository | ### Connect the GitOps repository\n\nTo continuously deploy your app, connect the application repository to your cluster using GitOps. Your **arc-cicd-demo-gitops** GitOps repository contains the basic resources to get your app up and running on your **arc-cicd-cluster** cluster.\n\nThe initial GitOps repository contains only a [manifest](https://github.com/Azure/arc-cicd-demo-gitops/blob/master/arc-cicd-cluster/manifests/namespaces.yml) that creates the **dev** and **stage** namespaces corresponding to the deployment environments.\n\nThe GitOps connection that you create automatically syncs the manifests in the manifest directory and updates the cluster state.\n\nThe CI/CD workflow populates the manifest directory with extra manifests to deploy the app.\n\n1. [Create a new GitOps connection](./tutorial-use-gitops-flux2.md) to your newly imported **arc-cicd-demo-gitops** repository in Azure Repos.\n\n   ```azurecli\n   az k8s-configuration flux create \\\n      --name cluster-config \\\n      --cluster-name arc-cicd-cluster \\\n      --namespace flux-system \\\n      --resource-group myResourceGroup \\\n      -u https://dev.azure.com/<Your organization>/<Your project>/_git/arc-cicd-demo-gitops \\\n      --https-user <Azure Repos username> \\\n      --https-key <Azure Repos PAT token> \\\n      --scope cluster \\\n      --cluster-type connectedClusters \\\n      --branch master \\\n      --kustomization name=cluster-config prune=true path=arc-cicd-cluster/manifests\n   ```\n\n   > [!TIP]\n   > For an AKS cluster (rather than an Arc-enabled cluster), use `-cluster-type managedClusters`.\n\n1. Check the state of the deployment in Azure portal.\n   * If successful, you see both `dev` and `stage` namespaces created in your cluster.\n   * You can also confirm that on the Azure portal page of your cluster, a configuration `cluster-config` is created on the `GitOps` tab.",
    "embedding": null,
    "embedding_model": null,
    "embedding_generated_at": null,
    "content_hash": "a4ce9ba7f8e5dfe28b411a674f9d758a46caa13612bd79b4c3e5ae2f76a7748c",
    "file_id": "4d1229b6dc50d3a990ffdf3b851b5e2741d36a02a95ab6b0d3b14c5df8fd629c",
    "chunk_id": "a33397ded12264187a3a3932918c0a37b58018297bbe93a667bc3f2e06bb260c",
    "prev_chunk_id": "6b0f096fa9cad4ebff97612b79e9e84c39826aea3ca79ffda5e7a02c4027258a",
    "next_chunk_id": "af5ea423256af66f61de6867844c729ac983fa2a4a16c0704728b57cf9c0dbba",
    "parent_heading_chunk_id": "acbb58d677b190c111bc77fa91e51dfd959e8a6b02d52697a361a6d9f20a849c",
    "total_chunks_in_file": 35
  },
  "meta": {
    "type": "chunk",
    "file": "/Users/cloudchase/Desktop/Vibe_Coding/Cursor/ai-content-developer/work/tmp/azure-management-docs/articles/azure-arc/kubernetes/tutorial-gitops-flux2-ci-cd.md",
    "section": [
      "Tutorial: Implement CI/CD with GitOps (Flux v2)",
      "Implement CI/CD with Azure DevOps",
      "Connect the GitOps repository"
    ],
    "has_embedding": false
  },
  "timestamp": "2025-06-02T15:36:20.838727"
}