{
  "data": {
    "content": "## Architecture\n\n:::image type=\"content\" source=\"media/conceptual-azure-rbac.png\" alt-text=\"Diagram showing Azure RBAC architecture.\":::\n\n[!INCLUDE [arc-jumpstart-diagram](~/reusable-content/ce-skilling/azure/includes/arc-jumpstart-diagram.md)]\n\nIn order to route all authorization access checks to the authorization service in Azure, a webhook server ([guard](https://github.com/appscode/guard)) is deployed on the cluster.\n\nThe `apiserver` of the cluster is configured to use [webhook token authentication](https://kubernetes.io/docs/reference/access-authn-authz/authentication/#webhook-token-authentication) and [webhook authorization](https://kubernetes.io/docs/reference/access-authn-authz/webhook/) so that `TokenAccessReview` and `SubjectAccessReview` requests are routed to the guard webhook server. The `TokenAccessReview` and `SubjectAccessReview` requests are triggered by requests for Kubernetes resources sent to the `apiserver`.\n\nGuard then makes a `checkAccess` call on the authorization service in Azure to see if the requesting Microsoft Entra entity has access to the resource of concern.\n\nIf that entity has a role that permits this access, an `allowed` response is sent from the authorization service to guard. Guard, in turn, sends an `allowed` response to the `apiserver`, enabling the calling entity to access the requested Kubernetes resource.\n\nIf the entity doesn't have a role that permits this access, a `denied` response is sent from the authorization service to guard. Guard sends a `denied` response to the `apiserver`, giving the calling entity a 403 forbidden error on the requested resource.",
    "file_path": "/Users/cloudchase/Desktop/Vibe_Coding/Cursor/ai-content-developer/work/tmp/azure-management-docs/articles/azure-arc/kubernetes/conceptual-azure-rbac.md",
    "heading_path": [
      "Azure RBAC on Azure Arc-enabled Kubernetes clusters",
      "Architecture"
    ],
    "section_level": 2,
    "chunk_index": 1,
    "frontmatter": {
      "title": "Azure RBAC on Azure Arc-enabled Kubernetes",
      "ms.date": "04/22/2025",
      "ms.topic": "concept-article",
      "description": "This article provides a conceptual overview of the Azure RBAC capability on Azure Arc-enabled Kubernetes."
    },
    "embedding_content": "Document: Azure RBAC on Azure Arc-enabled Kubernetes | Topic: concept-article | Description: This article provides a conceptual overview of the Azure RBAC capability on Azure Arc-enabled Kubern | Section: Azure RBAC on Azure Arc-enabled Kubernetes clusters > Architecture | ## Architecture\n\n:::image type=\"content\" source=\"media/conceptual-azure-rbac.png\" alt-text=\"Diagram showing Azure RBAC architecture.\":::\n\n[!INCLUDE [arc-jumpstart-diagram](~/reusable-content/ce-skilling/azure/includes/arc-jumpstart-diagram.md)]\n\nIn order to route all authorization access checks to the authorization service in Azure, a webhook server ([guard](https://github.com/appscode/guard)) is deployed on the cluster.\n\nThe `apiserver` of the cluster is configured to use [webhook token authentication](https://kubernetes.io/docs/reference/access-authn-authz/authentication/#webhook-token-authentication) and [webhook authorization](https://kubernetes.io/docs/reference/access-authn-authz/webhook/) so that `TokenAccessReview` and `SubjectAccessReview` requests are routed to the guard webhook server. The `TokenAccessReview` and `SubjectAccessReview` requests are triggered by requests for Kubernetes resources sent to the `apiserver`.\n\nGuard then makes a `checkAccess` call on the authorization service in Azure to see if the requesting Microsoft Entra entity has access to the resource of concern.\n\nIf that entity has a role that permits this access, an `allowed` response is sent from the authorization service to guard. Guard, in turn, sends an `allowed` response to the `apiserver`, enabling the calling entity to access the requested Kubernetes resource.\n\nIf the entity doesn't have a role that permits this access, a `denied` response is sent from the authorization service to guard. Guard sends a `denied` response to the `apiserver`, giving the calling entity a 403 forbidden error on the requested resource.",
    "embedding": null,
    "embedding_model": null,
    "embedding_generated_at": null,
    "content_hash": "c94f163e3b3dec7f6a1737505041e3a3539f67892b1725d60891f1f43e1aef98",
    "file_id": "b300f92b20d1801f7a70aed994e857a6881d981cc100de9cb54764e732a1e446",
    "chunk_id": "720eb742979356a3fde6162abbde1322e371067ef4a7a36b7758d081ad39b5f9",
    "prev_chunk_id": "9487185b040cfb75972385ed7f34cee0b970d87b0eee71782b671ee71d72e102",
    "next_chunk_id": "b312976642d8eac0ca7a09b833a9669c014e6971951a5b2c61845dbcc1292a07",
    "parent_heading_chunk_id": "bdb0edd4f36de8fe3c21bc8875a37270b043ae1c0bf2a392610dddc2530c76f7",
    "total_chunks_in_file": 4
  },
  "meta": {
    "type": "chunk",
    "file": "/Users/cloudchase/Desktop/Vibe_Coding/Cursor/ai-content-developer/work/tmp/azure-management-docs/articles/azure-arc/kubernetes/conceptual-azure-rbac.md",
    "section": [
      "Azure RBAC on Azure Arc-enabled Kubernetes clusters",
      "Architecture"
    ],
    "has_embedding": false
  },
  "timestamp": "2025-06-02T15:36:21.901735"
}