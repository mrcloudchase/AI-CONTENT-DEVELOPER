{
  "data": {
    "content": "# CI/CD workflow using GitOps (Flux v2)\n\nModern Kubernetes deployments contain multiple applications, clusters, and environments. With GitOps, you can manage these complex setups more easily, tracking the desired state of the Kubernetes environments declaratively with Git. Using common Git tooling to declare cluster state, you can increase accountability, facilitate fault investigation, and enable automation to manage environments.\n\nThis article describes how GitOps fits into the full application change lifecycle using Azure Arc, Azure Repos, and Azure Pipelines. It also provides an example of a single application change to GitOps-controlled Kubernetes environments.",
    "file_path": "/Users/cloudchase/Desktop/Vibe_Coding/Cursor/ai-content-developer/work/tmp/azure-management-docs/articles/azure-arc/kubernetes/conceptual-gitops-flux2-ci-cd.md",
    "heading_path": [
      "CI/CD workflow using GitOps (Flux v2)"
    ],
    "section_level": 1,
    "chunk_index": 0,
    "frontmatter": {
      "title": "CI/CD Workflow using GitOps (Flux v2) - Azure Arc-enabled Kubernetes",
      "description": "This article provides a conceptual overview of a CI/CD workflow using GitOps.",
      "ms.date": "04/22/2025",
      "ms.topic": "concept-article",
      "author": "eedorenko",
      "ms.author": "iefedore"
    },
    "embedding_content": "Document: CI/CD Workflow using GitOps (Flux v2) - Azure Arc-enabled Kubernetes | Topic: concept-article | Description: This article provides a conceptual overview of a CI/CD workflow using GitOps. | Section: CI/CD workflow using GitOps (Flux v2) | # CI/CD workflow using GitOps (Flux v2)\n\nModern Kubernetes deployments contain multiple applications, clusters, and environments. With GitOps, you can manage these complex setups more easily, tracking the desired state of the Kubernetes environments declaratively with Git. Using common Git tooling to declare cluster state, you can increase accountability, facilitate fault investigation, and enable automation to manage environments.\n\nThis article describes how GitOps fits into the full application change lifecycle using Azure Arc, Azure Repos, and Azure Pipelines. It also provides an example of a single application change to GitOps-controlled Kubernetes environments.",
    "embedding": null,
    "embedding_model": null,
    "embedding_generated_at": null,
    "content_hash": "88c551229b2e3c2ac9e7f4875f8448c66e701b62f598f4315546a691e5c18f8e",
    "file_id": "c034872bae0e1b385c7013c870cafa2b3fd327c006d451d059a4fed1eeb95586",
    "chunk_id": "60d00f22e1e7834194a14e3a15b4f1171b8e823ffc0eb792fe2154b34b5a912f",
    "prev_chunk_id": null,
    "next_chunk_id": "1db8c69998f2a5ef2ad717295b6f0693daff1c979fda16b08579ad3f1c475b5a",
    "parent_heading_chunk_id": null,
    "total_chunks_in_file": 13
  },
  "meta": {
    "type": "chunk",
    "file": "/Users/cloudchase/Desktop/Vibe_Coding/Cursor/ai-content-developer/work/tmp/azure-management-docs/articles/azure-arc/kubernetes/conceptual-gitops-flux2-ci-cd.md",
    "section": [
      "CI/CD workflow using GitOps (Flux v2)"
    ],
    "has_embedding": false
  },
  "timestamp": "2025-06-02T15:36:21.619101"
}