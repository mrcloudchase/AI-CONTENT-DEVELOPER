{
  "data": {
    "content": "## Inner loop to outer loop transition\n\nAfter you evaluate and select an inner loop dev framework, you can build a seamless inner loop to outer loop transition.\n\nAs described in the [CI/CD workflow using GitOps](conceptual-gitops-flux2-ci-cd.md) example scenario, a developer works on application code within an application repository. This application repository also holds high-level deployment Helm and/or Kustomize templates.\n\nThe CI/CD pipelines:\n\n- Generate the low-level manifests from the high-level templates, adding environment-specific values.\n- Create a pull request that merges the low-level manifests with the GitOps repo that holds desired state for the specific environment.\n\nSimilar low-level manifests can be generated locally for the inner dev loop, using the configuration values local to the developer. Application developers can iterate on the code changes and use the low-level manifests to deploy and debug applications. Generation of the low-level manifests can be integrated into an inner loop workflow, using the developer\u2019s local configuration. Most of the inner loop framework allows configuring custom flows by either extending through custom plugins or injecting script invocation based on hooks.",
    "file_path": "/Users/cloudchase/Desktop/Vibe_Coding/Cursor/ai-content-developer/work/tmp/azure-management-docs/articles/azure-arc/kubernetes/conceptual-inner-loop-gitops.md",
    "heading_path": [
      "Inner loop developer experience for teams adopting GitOps",
      "Inner loop to outer loop transition"
    ],
    "section_level": 2,
    "chunk_index": 2,
    "frontmatter": {
      "title": "Inner loop developer experience for teams adopting GitOps",
      "ms.date": "01/23/2025",
      "ms.topic": "concept-article",
      "description": "Learn how an established inner loop can enhance developer productivity and help in a seamless transition for teams adopting GitOps."
    },
    "embedding_content": "Document: Inner loop developer experience for teams adopting GitOps | Topic: concept-article | Description: Learn how an established inner loop can enhance developer productivity and help in a seamless transi | Section: Inner loop developer experience for teams adopting GitOps > Inner loop to outer loop transition | ## Inner loop to outer loop transition\n\nAfter you evaluate and select an inner loop dev framework, you can build a seamless inner loop to outer loop transition.\n\nAs described in the [CI/CD workflow using GitOps](conceptual-gitops-flux2-ci-cd.md) example scenario, a developer works on application code within an application repository. This application repository also holds high-level deployment Helm and/or Kustomize templates.\n\nThe CI/CD pipelines:\n\n- Generate the low-level manifests from the high-level templates, adding environment-specific values.\n- Create a pull request that merges the low-level manifests with the GitOps repo that holds desired state for the specific environment.\n\nSimilar low-level manifests can be generated locally for the inner dev loop, using the configuration values local to the developer. Application developers can iterate on the code changes and use the low-level manifests to deploy and debug applications. Generation of the low-level manifests can be integrated into an inner loop workflow, using the developer\u2019s local configuration. Most of the inner loop framework allows configuring custom flows by either extending through custom plugins or injecting script invocation based on hooks.",
    "embedding": null,
    "embedding_model": null,
    "embedding_generated_at": null,
    "content_hash": "e94e797677bcb748bb65115f2af336aa644dcb3917023bce451e6dd7f5985df5",
    "file_id": "6416b4886a89963d19e6ac150f43526dc689438a00ff9aa45a7e6cb9a88631e3",
    "chunk_id": "9bb1db3e9f91f21262553975c4cb43ec8e9c928cb6d0cd13fe487a7f9ed534d6",
    "prev_chunk_id": "efb4801edfdd8dfed2107cbf105411576f3cb860f60acf0049dceb19b65eb693",
    "next_chunk_id": "42af7df0ec5f3349f35291440ac6106628e6b5717d4dfdb23a09d73a5ac09456",
    "parent_heading_chunk_id": "fa42c2ac4bd5244c2a82ea4fc178e28b76de2de0b3f7f6041395c9bda658ef48",
    "total_chunks_in_file": 5
  },
  "meta": {
    "type": "chunk",
    "file": "/Users/cloudchase/Desktop/Vibe_Coding/Cursor/ai-content-developer/work/tmp/azure-management-docs/articles/azure-arc/kubernetes/conceptual-inner-loop-gitops.md",
    "section": [
      "Inner loop developer experience for teams adopting GitOps",
      "Inner loop to outer loop transition"
    ],
    "has_embedding": false
  },
  "timestamp": "2025-06-02T15:36:19.973427"
}