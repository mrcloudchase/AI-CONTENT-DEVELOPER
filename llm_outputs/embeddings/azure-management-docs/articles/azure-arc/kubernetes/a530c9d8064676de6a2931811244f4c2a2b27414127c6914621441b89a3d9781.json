{
  "data": {
    "content": "# Create a scheduling policy for the uat-test deployment target\ncat <<EOF >scheduling/kaizen/uat-test-policy.yaml\napiVersion: scheduler.kalypso.io/v1alpha1\nkind: SchedulingPolicy\nmetadata:\n  name: uat-test-policy\nspec:\n  deploymentTargetSelector:\n    workspace: kaizen-app-team\n    labelSelector:\n      matchLabels:\n        purpose: uat-test\n  clusterTypeSelector:\n    labelSelector: {}\nEOF\n\ngit add .\ngit commit -m 'application scheduling policies'\ngit config pull.rebase false\ngit pull --no-edit\ngit push\n```\n\nThe policy states that all deployment targets from the `kaizen-app-team` workspace marked with labels `purpose: uat-test` should be scheduled on all cluster types defined in the environment. \n\nPushing this policy to the `stage` branch triggers the scheduling process, which creates a PR with the assignment manifests to the `Platform GitOps` repository, similar to those for the `Dev` environment.\n\nAs in the case with the `Dev` environment, after reviewing and merging the PR to the `Platform GitOps` repository, the `checkpromote` workflow in the `control plane` repository waits until clusters with the [GitOps extension](conceptual-gitops-flux2.md) (`drone`) reconcile the assignment manifests.\n\n :::image type=\"content\" source=\"media/workload-management/check-promote-to-stage.png\" alt-text=\"Screenshot showing promotion to stage.\":::\n\nOn successful execution, the commit status is updated.\n\n:::image type=\"content\" source=\"media/workload-management/stage-git-commit-status.png\" alt-text=\"Screenshot showing successful commit status.\":::",
    "file_path": "/Users/cloudchase/Desktop/Vibe_Coding/Cursor/ai-content-developer/work/tmp/azure-management-docs/articles/azure-arc/kubernetes/workload-management.md",
    "heading_path": [
      "Create a scheduling policy for the uat-test deployment target"
    ],
    "section_level": 1,
    "chunk_index": 15,
    "frontmatter": {
      "title": "Explore workload management in a multi-cluster environment with GitOps",
      "description": "Explore typical use-cases that Platform and Application teams face on a daily basis working with Kubernetes workloads in a multi-cluster environment.",
      "keywords": "GitOps, Flux, Kubernetes, K8s, Azure, Arc, AKS, ci/cd, devops",
      "author": "eedorenko",
      "ms.author": "iefedore",
      "ms.topic": "how-to",
      "ms.date": "03/29/2023"
    },
    "embedding_content": "Document: Explore workload management in a multi-cluster environment with GitOps | Topic: how-to | Description: Explore typical use-cases that Platform and Application teams face on a daily basis working with Kub | Section: Create a scheduling policy for the uat-test deployment target | # Create a scheduling policy for the uat-test deployment target\ncat <<EOF >scheduling/kaizen/uat-test-policy.yaml\napiVersion: scheduler.kalypso.io/v1alpha1\nkind: SchedulingPolicy\nmetadata:\n  name: uat-test-policy\nspec:\n  deploymentTargetSelector:\n    workspace: kaizen-app-team\n    labelSelector:\n      matchLabels:\n        purpose: uat-test\n  clusterTypeSelector:\n    labelSelector: {}\nEOF\n\ngit add .\ngit commit -m 'application scheduling policies'\ngit config pull.rebase false\ngit pull --no-edit\ngit push\n```\n\nThe policy states that all deployment targets from the `kaizen-app-team` workspace marked with labels `purpose: uat-test` should be scheduled on all cluster types defined in the environment. \n\nPushing this policy to the `stage` branch triggers the scheduling process, which creates a PR with the assignment manifests to the `Platform GitOps` repository, similar to those for the `Dev` environment.\n\nAs in the case with the `Dev` environment, after reviewing and merging the PR to the `Platform GitOps` repository, the `checkpromote` workflow in the `control plane` repository waits until clusters with the [GitOps extension](conceptual-gitops-flux2.md) (`drone`) reconcile the assignment manifests.\n\n :::image type=\"content\" source=\"media/workload-management/check-promote-to-stage.png\" alt-text=\"Screenshot showing promotion to stage.\":::\n\nOn successful execution, the commit status is updated.\n\n:::image type=\"content\" source=\"media/workload-management/stage-git-commit-status.png\" alt-text=\"Screenshot showing successful commit status.\":::",
    "embedding": null,
    "embedding_model": null,
    "embedding_generated_at": null,
    "content_hash": "65487d3b0b9b68b5acdbe088b623b3e254f190b2f656f9030c7c52a259fe31b6",
    "file_id": "860938b8acc2edaecb7d029e76e899735c706b1e333677a4f8a2ac5adf75a619",
    "chunk_id": "a530c9d8064676de6a2931811244f4c2a2b27414127c6914621441b89a3d9781",
    "prev_chunk_id": "f7ddc8eb2a65dcdae8b62969f52a0c9fa56c372ca7a6ac5e9a754f6a31f464b1",
    "next_chunk_id": "cae6c8eb6f41d5e09f4f39086ac12899eaf14baf4eb3cdad798738354b56c1c2",
    "parent_heading_chunk_id": null,
    "total_chunks_in_file": 32
  },
  "meta": {
    "type": "chunk",
    "file": "/Users/cloudchase/Desktop/Vibe_Coding/Cursor/ai-content-developer/work/tmp/azure-management-docs/articles/azure-arc/kubernetes/workload-management.md",
    "section": [
      "Create a scheduling policy for the uat-test deployment target"
    ],
    "has_embedding": false
  },
  "timestamp": "2025-06-03T19:17:34.189518"
}