{
  "data": {
    "content": "| Parameter name | Description |\n|--------------|------------|\n| `--auto-upgrade-minor-version` | A Boolean property that sets whether the extension minor version upgrades automatically. The default setting is `true`. If this parameter is set to `true`, you can't set the `version` parameter because the version is dynamically updated. If this parameter is set to `false`, the extension isn't be automatically upgraded, even for patch versions. |\n| `--version` | The version of the extension to be installed (the specific version to pin the extension instance to). You can't set the `version` parameter if `auto-upgrade-minor-version` is set to `true`. |\n| `--configuration-settings` | Settings that can be passed into the extension to control its functionality. These settings are passed in as space-separated `key=value` pairs after the parameter name. If this parameter is used in the command, you can't pass `--configuration-settings-file` in the same command. |\n| `--configuration-settings-file` | The path to a JSON file with `key=value` pairs to be used for passing configuration settings into the extension. If this parameter is used in the command, you can't use `--configuration-settings` in the same command. |\n| `--configuration-protected-settings` | Settings that aren't retrievable using `GET` API calls or `az k8s-extension show` commands. Typically used to pass in sensitive settings. These settings are passed in as space-separated `key=value` pairs after the parameter name. If this parameter is used in the command, you can't use `--configuration-protected-settings-file` in the same command. |\n| `--configuration-protected-settings-file` | The path to a JSON file with `key=value` pairs to be used to pass sensitive settings into the extension. If this parameter is used in the command, you can't use `--configuration-protected-settings` in the same command. |\n| `--release-namespace` | This parameter indicates the namespace in which to create the release. This parameter is relevant only if `scope` is set to `cluster`. |\n| `--release-train` |  The author of an extension can publish versions in different release trains, such as `Stable` or `Preview`. If this parameter isn't set explicitly, `Stable` is the default.  |\n| `--target-namespace` | Indicates the namespace within which to create the release. Permissions for the system account that's created for this extension instance is restricted to this namespace. This setting is relevant only if `scope` is set to `namespace`. |",
    "file_path": "/Users/cloudchase/Desktop/Vibe_Coding/Cursor/ai-content-developer/work/tmp/azure-management-docs/articles/azure-arc/kubernetes/extensions.md",
    "heading_path": [
      "Deploy and manage an Azure Arc-enabled Kubernetes cluster extension",
      "Create an extension instance",
      "Optional parameters"
    ],
    "section_level": 3,
    "chunk_index": 5,
    "frontmatter": {
      "title": "Deploy and manage an Azure Arc-enabled Kubernetes cluster extension",
      "ms.custom": "devx-track-azurecli",
      "ms.date": "02/08/2024",
      "ms.topic": "how-to",
      "description": "Learn how to create and manage an extension instance on an Azure Arc-enabled Kubernetes cluster."
    },
    "embedding_content": "Document: Deploy and manage an Azure Arc-enabled Kubernetes cluster extension | Topic: how-to | Description: Learn how to create and manage an extension instance on an Azure Arc-enabled Kubernetes cluster. | Section: Deploy and manage an Azure Arc-enabled Kubernetes cluster extension > Create an extension instance > Optional parameters | | Parameter name | Description |\n|--------------|------------|\n| `--auto-upgrade-minor-version` | A Boolean property that sets whether the extension minor version upgrades automatically. The default setting is `true`. If this parameter is set to `true`, you can't set the `version` parameter because the version is dynamically updated. If this parameter is set to `false`, the extension isn't be automatically upgraded, even for patch versions. |\n| `--version` | The version of the extension to be installed (the specific version to pin the extension instance to). You can't set the `version` parameter if `auto-upgrade-minor-version` is set to `true`. |\n| `--configuration-settings` | Settings that can be passed into the extension to control its functionality. These settings are passed in as space-separated `key=value` pairs after the parameter name. If this parameter is used in the command, you can't pass `--configuration-settings-file` in the same command. |\n| `--configuration-settings-file` | The path to a JSON file with `key=value` pairs to be used for passing configuration settings into the extension. If this parameter is used in the command, you can't use `--configuration-settings` in the same command. |\n| `--configuration-protected-settings` | Settings that aren't retrievable using `GET` API calls or `az k8s-extension show` commands. Typically used to pass in sensitive settings. These settings are passed in as space-separated `key=value` pairs after the parameter name. If this parameter is used in the command, you can't use `--configuration-protected-settings-file` in the same command. |\n| `--configuration-protected-settings-file` | The path to a JSON file with `key=value` pairs to be used to pass sensitive settings into the extension. If this parameter is used in the command, you can't use `--configuration-protected-settings` in the same command. |\n| `--release-namespace` | This parameter indicates the namespace in which to create the release. This parameter is relevant only if `scope` is set to `cluster`. |\n| `--release-train` |  The author of an extension can publish versions in different release trains, such as `Stable` or `Preview`. If this parameter isn't set explicitly, `Stable` is the default.  |\n| `--target-namespace` | Indicates the namespace within which to create the release. Permissions for the system account that's created for this extension instance is restricted to this namespace. This setting is relevant only if `scope` is set to `namespace`. |",
    "embedding": null,
    "embedding_model": null,
    "embedding_generated_at": null,
    "content_hash": "96be9259e36bd9ad5fd226397549d3baa93908fdec02a04a2376ae3f51e1d886",
    "file_id": "2a9bde77184acf7bf3785276344cccda359daaa216f07ee6dd76f63de1a1e6e2",
    "chunk_id": "adb98f8670050bc109ae8feff988036a3b267cf811c5acb919534c8531256f51",
    "prev_chunk_id": "fdaab9e19d2bc7cdd3bfad0659270f56822226ea9adcc3fc157c398aeaaff32f",
    "next_chunk_id": "b4313f14db53cfa89f8a6e5e2b7fad62fee4dd48fa40395a1f11da03f582ae9e",
    "parent_heading_chunk_id": "c718f2b1c87cf934d0db9702c92ef7f3c69f2a9e53460f06027bb9cf3408eb0b",
    "total_chunks_in_file": 14
  },
  "meta": {
    "type": "chunk",
    "file": "/Users/cloudchase/Desktop/Vibe_Coding/Cursor/ai-content-developer/work/tmp/azure-management-docs/articles/azure-arc/kubernetes/extensions.md",
    "section": [
      "Deploy and manage an Azure Arc-enabled Kubernetes cluster extension",
      "Create an extension instance",
      "Optional parameters"
    ],
    "has_embedding": false
  },
  "timestamp": "2025-06-02T15:36:19.277798"
}