{
  "data": {
    "content": "### Platform services\n\nPlatform services are workloads (such as Prometheus, NGINX, Fluentbit, and so on) maintained by the platform team. Just like any workloads, they have their source repositories and manifests storage. The source repositories may contain pointers to external Helm charts. CI/CD pipelines pull the charts with containers and perform necessary security scans before submitting them to the manifests storage, from where they're reconciled to the clusters.",
    "file_path": "/Users/cloudchase/Desktop/Vibe_Coding/Cursor/ai-content-developer/work/tmp/azure-management-docs/articles/azure-arc/kubernetes/conceptual-workload-management.md",
    "heading_path": [
      "Workload management in a multi-cluster environment with GitOps",
      "Solution architecture",
      "Platform services"
    ],
    "section_level": 3,
    "chunk_index": 12,
    "frontmatter": {
      "title": "Workload management in a multi-cluster environment with GitOps",
      "description": "This article provides a conceptual overview of the workload management in a multi-cluster environment with GitOps.",
      "ms.date": "03/29/2023",
      "ms.topic": "concept-article",
      "author": "eedorenko",
      "ms.author": "iefedore"
    },
    "embedding_content": "Document: Workload management in a multi-cluster environment with GitOps | Topic: concept-article | Description: This article provides a conceptual overview of the workload management in a multi-cluster environmen | Section: Workload management in a multi-cluster environment with GitOps > Solution architecture > Platform services | ### Platform services\n\nPlatform services are workloads (such as Prometheus, NGINX, Fluentbit, and so on) maintained by the platform team. Just like any workloads, they have their source repositories and manifests storage. The source repositories may contain pointers to external Helm charts. CI/CD pipelines pull the charts with containers and perform necessary security scans before submitting them to the manifests storage, from where they're reconciled to the clusters.",
    "embedding": null,
    "embedding_model": null,
    "embedding_generated_at": null,
    "content_hash": "cfbdbf9f271a1d671e57ab75fd6dadb62667d8c0e759555d04427fd04916bec3",
    "file_id": "68b84d3ed0d9d36d4ec56ccb018594e09d36629cea891036b7b04a8fba544e6e",
    "chunk_id": "57e3e873d63541c253a2a3980da9ed6703ef7e9912e918a05a7ec84ce1ebca58",
    "prev_chunk_id": "592930c9646d87024b26d7dcb3b95b4295939cccd24cffa17ea596f6bc385cc2",
    "next_chunk_id": "5d28a428840df451f2a5a85bb41eadde44383dfaad1732db1cd8bfbf579d643e",
    "parent_heading_chunk_id": "57fb9dec7e7eb4fd29ccd39cfbb36509166926f31cbe905690418269fa199579",
    "total_chunks_in_file": 31
  },
  "meta": {
    "type": "chunk",
    "file": "/Users/cloudchase/Desktop/Vibe_Coding/Cursor/ai-content-developer/work/tmp/azure-management-docs/articles/azure-arc/kubernetes/conceptual-workload-management.md",
    "section": [
      "Workload management in a multi-cluster environment with GitOps",
      "Solution architecture",
      "Platform services"
    ],
    "has_embedding": false
  },
  "timestamp": "2025-06-03T19:17:33.675002"
}