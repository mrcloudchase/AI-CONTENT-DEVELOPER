{
  "data": {
    "content": "```yaml\n   kind: ConfigMap\n   apiVersion: v1\n   data:\n     schema-version:\n         #string.used by agent to parse config. supported versions are {v1}. Configs with other schema versions will be rejected by the agent.\n       v1\n     config-version:\n       #string.used by customer to keep track of this config file's version in their source control/repository (max allowed 10 chars, other chars will be truncated)\n       ver1\n     default-scrape-settings-enabled: |-\n       kubelet = true\n       coredns = false\n       cadvisor = true\n       kubeproxy = false\n       apiserver = false\n       kubestate = true\n       nodeexporter = true\n       windowsexporter = false\n       windowskubeproxy = false\n       kappiebasic = true\n       prometheuscollectorhealth = false\n     # Regex for which namespaces to scrape through pod annotation based scraping.\n     # This is none by default. Use '.*' to scrape all namespaces of annotated pods.\n     pod-annotation-based-scraping: |-\n       podannotationnamespaceregex = \"flux-system\"\n     default-targets-scrape-interval-settings: |-\n       kubelet = \"30s\"\n       coredns = \"30s\"\n       cadvisor = \"30s\"\n       kubeproxy = \"30s\"\n       apiserver = \"30s\"\n       kubestate = \"30s\"\n       nodeexporter = \"30s\"\n       windowsexporter = \"30s\"\n       windowskubeproxy = \"30s\"\n       kappiebasic = \"30s\"\n       prometheuscollectorhealth = \"30s\"\n       podannotations = \"30s\"\n   metadata:\n     name: ama-metrics-settings-configmap\n     namespace: kube-system\n   ```\n  \n1. Download the [Flux Control Plane](https://github.com/Azure/fluxv2-grafana-dashboards/blob/main/dashboards/Flux%20Control%20Plane.json) and [Flux Cluster Stats](https://github.com/Azure/fluxv2-grafana-dashboards/blob/main/dashboards/Flux%20Cluster%20Stats.json) dashboards.\n1. [Link the Managed Prometheus workspace to the Managed Grafana instance](/azure/azure-monitor/essentials/azure-monitor-workspace-manage#link-a-grafana-workspace). This process takes a few minutes to complete.\n1. Follow the steps to [import these JSON dashboards to Grafana](/azure/managed-grafana/how-to-create-dashboard#import-a-json-dashboard).\n\nAfter you import the dashboards, they display information from the clusters that you're monitoring. To show information only for a particular cluster or namespace, use the filters near the top of each dashboard.\n\nThe **Flux Control Plane** dashboard shows details about status resource consumption, reconciliations at the cluster level, and Kubernetes API requests.\n\n:::image type=\"content\" source=\"media/monitor-gitops-flux2/flux-control-plane-dashboard.png\" alt-text=\"Screenshot of the Flux Control Plane dashboard.\" lightbox=\"media/monitor-gitops-flux2/flux-control-plane-dashboard.png\":::\n\nThe **Flux Cluster Stats** dashboard shows details about the number of reconcilers, along with the status and execution duration of each reconciler.",
    "file_path": "/Users/cloudchase/Desktop/Vibe_Coding/Cursor/ai-content-developer/work/tmp/azure-management-docs/articles/azure-arc/kubernetes/monitor-gitops-flux-2.md",
    "heading_path": [
      "Monitor GitOps (Flux v2) status and activity",
      "Monitor resource consumption and reconciliations"
    ],
    "section_level": 2,
    "chunk_index": 12,
    "frontmatter": {
      "title": "Monitor GitOps (Flux v2) status and activity",
      "ms.date": "02/26/2025",
      "ms.topic": "how-to",
      "description": "Learn how to monitor status, compliance, resource consumption, and reconciliation activity for GitOps with Flux v2."
    },
    "embedding_content": "Document: Monitor GitOps (Flux v2) status and activity | Topic: how-to | Description: Learn how to monitor status, compliance, resource consumption, and reconciliation activity for GitOp | Section: Monitor GitOps (Flux v2) status and activity > Monitor resource consumption and reconciliations | ```yaml\n   kind: ConfigMap\n   apiVersion: v1\n   data:\n     schema-version:\n         #string.used by agent to parse config. supported versions are {v1}. Configs with other schema versions will be rejected by the agent.\n       v1\n     config-version:\n       #string.used by customer to keep track of this config file's version in their source control/repository (max allowed 10 chars, other chars will be truncated)\n       ver1\n     default-scrape-settings-enabled: |-\n       kubelet = true\n       coredns = false\n       cadvisor = true\n       kubeproxy = false\n       apiserver = false\n       kubestate = true\n       nodeexporter = true\n       windowsexporter = false\n       windowskubeproxy = false\n       kappiebasic = true\n       prometheuscollectorhealth = false\n     # Regex for which namespaces to scrape through pod annotation based scraping.\n     # This is none by default. Use '.*' to scrape all namespaces of annotated pods.\n     pod-annotation-based-scraping: |-\n       podannotationnamespaceregex = \"flux-system\"\n     default-targets-scrape-interval-settings: |-\n       kubelet = \"30s\"\n       coredns = \"30s\"\n       cadvisor = \"30s\"\n       kubeproxy = \"30s\"\n       apiserver = \"30s\"\n       kubestate = \"30s\"\n       nodeexporter = \"30s\"\n       windowsexporter = \"30s\"\n       windowskubeproxy = \"30s\"\n       kappiebasic = \"30s\"\n       prometheuscollectorhealth = \"30s\"\n       podannotations = \"30s\"\n   metadata:\n     name: ama-metrics-settings-configmap\n     namespace: kube-system\n   ```\n  \n1. Download the [Flux Control Plane](https://github.com/Azure/fluxv2-grafana-dashboards/blob/main/dashboards/Flux%20Control%20Plane.json) and [Flux Cluster Stats](https://github.com/Azure/fluxv2-grafana-dashboards/blob/main/dashboards/Flux%20Cluster%20Stats.json) dashboards.\n1. [Link the Managed Prometheus workspace to the Managed Grafana instance](/azure/azure-monitor/essentials/azure-monitor-workspace-manage#link-a-grafana-workspace). This process takes a few minutes to complete.\n1. Follow the steps to [import these JSON dashboards to Grafana](/azure/managed-grafana/how-to-create-dashboard#import-a-json-dashboard).\n\nAfter you import the dashboards, they display information from the clusters that you're monitoring. To show information only for a particular cluster or namespace, use the filters near the top of each dashboard.\n\nThe **Flux Control Plane** dashboard shows details about status resource consumption, reconciliations at the cluster level, and Kubernetes API requests.\n\n:::image type=\"content\" source=\"media/monitor-gitops-flux2/flux-control-plane-dashboard.png\" alt-text=\"Screenshot of the Flux Control Plane dashboard.\" lightbox=\"media/monitor-gitops-flux2/flux-control-plane-dashboard.png\":::\n\nThe **Flux Cluster Stats** dashboard shows details about the number of reconcilers, along with the status and execution duration of each reconciler.",
    "embedding": null,
    "embedding_model": null,
    "embedding_generated_at": null,
    "content_hash": "115fe132f690c416b124139527e81833696b3bf3c5ffc8130224eccb28b6d795",
    "file_id": "d5cf2008aa582ba87374755e0e98b830039eec148a5d6f4688b86f3444e9902e",
    "chunk_id": "534361c3eb0e25d5546ed76aa5d628c8475e0aa43ecfcea28e4ace99fc273ee6",
    "prev_chunk_id": "99b58716ba400c3d12f290d04a8f51a1371e51a920efb0fee842b11d7ea47e38",
    "next_chunk_id": "df80f713ca5cb1da3c370633fb9ff7dbd5fabf50e55c453b4623470742f2f742",
    "parent_heading_chunk_id": "b1854aa928d4e7fef4198ed64af082c6cc1866d97728eba679361590ec98ea19",
    "total_chunks_in_file": 18
  },
  "meta": {
    "type": "chunk",
    "file": "/Users/cloudchase/Desktop/Vibe_Coding/Cursor/ai-content-developer/work/tmp/azure-management-docs/articles/azure-arc/kubernetes/monitor-gitops-flux-2.md",
    "section": [
      "Monitor GitOps (Flux v2) status and activity",
      "Monitor resource consumption and reconciliations"
    ],
    "has_embedding": false
  },
  "timestamp": "2025-06-03T19:17:33.748452"
}