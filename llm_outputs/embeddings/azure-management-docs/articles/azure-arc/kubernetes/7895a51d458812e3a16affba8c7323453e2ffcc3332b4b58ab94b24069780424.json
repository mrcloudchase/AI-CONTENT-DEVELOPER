{
  "data": {
    "content": "### Use workload identity with Azure DevOps\n\nTo use workload identity with Azure DevOps, enable the following prerequisites:\n\n* Ensure that your Azure DevOps Organization is [connected to Microsoft Entra](/azure/devops/organizations/accounts/connect-organization-to-azure-ad?view=azure-devops&preserve-view=true).\n* Confirm that workload identity is properly set up on your cluster, following the steps for [AKS clusters](/azure/aks/workload-identity-deploy-cluster#create-an-aks-cluster) or [Arc-enabled Kubernetes clusters](workload-identity.md#enable-workload-identity-on-your-cluster).\n* Create a managed identity and federated credentials, and enable workload identity on the Flux extension's flux controller pods, as described earlier in this section.\n* Add the managed identity to the Azure DevOps organization as a user, ensuring that it has permissions to access the Azure DevOps repository. For detailed steps, see [Use service principals & managed identities in Azure DevOps](/azure/devops/integrate/get-started/authentication/service-principal-managed-identity#2-add-and-manage-service-principals-in-an-azure-devops-organization).\n\nNext, set the flux configuration's `gitRepository` provider to \"azure\" to enable credential-free authentication. This can be configured by using Bicep, ARM templates, or Azure CLI. For example, to set the provider using Azure CLI, run the following command:\n \n```azurecli\naz k8s-configuration flux update --cluster-name <cluster-name> --resource-group <resource-group> --cluster-type <cluster-type> --name flux --provider \"azure\"\n```",
    "file_path": "/Users/cloudchase/Desktop/Vibe_Coding/Cursor/ai-content-developer/work/tmp/azure-management-docs/articles/azure-arc/kubernetes/tutorial-use-gitops-flux2.md",
    "heading_path": [
      "Update flux extension with annotation",
      "Workload identity in Arc-enabled Kubernetes clusters and AKS clusters",
      "Use workload identity with Azure DevOps"
    ],
    "section_level": 3,
    "chunk_index": 41,
    "frontmatter": {
      "title": "Tutorial: Deploy applications using GitOps with Flux v2",
      "description": "This tutorial shows how to use GitOps with Flux v2 to manage configuration and application deployment in Azure Arc and AKS clusters.",
      "ms.date": "03/26/2025",
      "ms.topic": "tutorial",
      "ms.custom": "template-tutorial, devx-track-azurecli, references_regions"
    },
    "embedding_content": "Document: Tutorial: Deploy applications using GitOps with Flux v2 | Topic: tutorial | Description: This tutorial shows how to use GitOps with Flux v2 to manage configuration and application deploymen | Section: Update flux extension with annotation > Workload identity in Arc-enabled Kubernetes clusters and AKS clusters > Use workload identity with Azure DevOps | ### Use workload identity with Azure DevOps\n\nTo use workload identity with Azure DevOps, enable the following prerequisites:\n\n* Ensure that your Azure DevOps Organization is [connected to Microsoft Entra](/azure/devops/organizations/accounts/connect-organization-to-azure-ad?view=azure-devops&preserve-view=true).\n* Confirm that workload identity is properly set up on your cluster, following the steps for [AKS clusters](/azure/aks/workload-identity-deploy-cluster#create-an-aks-cluster) or [Arc-enabled Kubernetes clusters](workload-identity.md#enable-workload-identity-on-your-cluster).\n* Create a managed identity and federated credentials, and enable workload identity on the Flux extension's flux controller pods, as described earlier in this section.\n* Add the managed identity to the Azure DevOps organization as a user, ensuring that it has permissions to access the Azure DevOps repository. For detailed steps, see [Use service principals & managed identities in Azure DevOps](/azure/devops/integrate/get-started/authentication/service-principal-managed-identity#2-add-and-manage-service-principals-in-an-azure-devops-organization).\n\nNext, set the flux configuration's `gitRepository` provider to \"azure\" to enable credential-free authentication. This can be configured by using Bicep, ARM templates, or Azure CLI. For example, to set the provider using Azure CLI, run the following command:\n \n```azurecli\naz k8s-configuration flux update --cluster-name <cluster-name> --resource-group <resource-group> --cluster-type <cluster-type> --name flux --provider \"azure\"\n```",
    "embedding": null,
    "embedding_model": null,
    "embedding_generated_at": null,
    "content_hash": "9062a83acfcd4edb9f7f27774e06a2605887acc113d15c08e08559c9b85e604a",
    "file_id": "e86c9f8524b4e2887fafe4602021952640d48b815217386227741e43a048021a",
    "chunk_id": "7895a51d458812e3a16affba8c7323453e2ffcc3332b4b58ab94b24069780424",
    "prev_chunk_id": "2849e2c0afd11507f8b343047bb56f33bc7ed325e7489597fbcdcc4d43749712",
    "next_chunk_id": "830352089cfce7413c2bdecedd9e371ffe1ed7ff20232694e3c62064e8b269b5",
    "parent_heading_chunk_id": "f99a66be2e8e9b3b027560f8302cecc7b99114dcdd9d1cab3ba3c7b299fb8ce0",
    "total_chunks_in_file": 51
  },
  "meta": {
    "type": "chunk",
    "file": "/Users/cloudchase/Desktop/Vibe_Coding/Cursor/ai-content-developer/work/tmp/azure-management-docs/articles/azure-arc/kubernetes/tutorial-use-gitops-flux2.md",
    "section": [
      "Update flux extension with annotation",
      "Workload identity in Arc-enabled Kubernetes clusters and AKS clusters",
      "Use workload identity with Azure DevOps"
    ],
    "has_embedding": false
  },
  "timestamp": "2025-06-02T15:36:19.927820"
}