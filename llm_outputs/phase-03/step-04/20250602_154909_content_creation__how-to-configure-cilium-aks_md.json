{
  "metadata": {
    "timestamp": "2025-06-02T15:49:09.164409",
    "operation": "Content Creation: how-to-configure-cilium-aks.md"
  },
  "data": {
    "thinking": "To create this How-To Guide, I first mapped the required section order (Introduction, Prerequisites, Steps, Verification [optional], Next Steps) to the content brief and the provided materials. The Introduction will explain Cilium's role in AKS networking and its benefits, referencing both the PRD and Microsoft Learn article. Prerequisites will cover supported versions, required CLI/API versions, permissions, and assumed knowledge, consolidating details from both sources. The Steps section will provide actionable procedures for deploying AKS with Cilium in overlay and VNet modes, configuring CiliumEndpointSlices, integrating with Azure Monitor, and setting up security with Azure AD, including code examples and configuration snippets as specified. Operational best practices and known limitations will be included as sub-sections or callouts within Steps, as per the brief and materials. The Next Steps section will guide users to advanced policy scenarios, GitOps integration, and monitoring/troubleshooting resources, with links to related docs. All technical claims, warnings, and limitations are directly sourced from the materials, and placeholders are used for sensitive values. The document ends with the terminal Next Steps section, ensuring structural integrity and compliance with Microsoft documentation standards.",
    "content": "---\ntitle: Configure and manage Cilium networking in AKS with Azure CNI\ndescription: Step-by-step guide for platform engineers to configure, deploy, and manage Cilium as the networking solution in Azure Kubernetes Service (AKS) using Azure CNI, including advanced features, observability, and operational best practices.\nms.topic: how-to\n---\n\n# Configure and manage Cilium networking in AKS with Azure CNI\n\n## Introduction\n\nCilium is an advanced, eBPF-based networking solution that enhances Azure Kubernetes Service (AKS) by providing high-performance networking, dynamic endpoint management, and advanced network policy enforcement. When integrated with Azure CNI, Cilium enables efficient service discovery, granular security, and improved observability for Kubernetes clusters. This guide walks platform engineers through configuring, deploying, and managing Cilium in AKS, leveraging features such as CiliumEndpointSlices, eBPF-based policies, and integration with Azure Monitor.\n\n> [!NOTE]\n> CiliumEndpointSlices in AKS allow for dynamic grouping of pod endpoints, improving scalability and service discovery performance, especially in large-scale environments.\n\n## Prerequisites\n\nBefore you begin, ensure you meet the following requirements:\n\n> [!div class=\"checklist\"]\n> * Familiarity with AKS and Kubernetes networking concepts\n> * Access to an Azure subscription with permissions to create and manage AKS clusters\n> * Azure CLI version 2.48.1 or later installed ([Install Azure CLI](https://learn.microsoft.com/en-us/cli/azure/install-azure-cli))\n> * If using ARM templates or REST API, AKS API version 2022-09-02-preview or later\n> * Supported Kubernetes and Cilium versions:\n>   * Kubernetes 1.27 (LTS) with Cilium 1.13.18+\n>   * Kubernetes 1.29+ with Cilium 1.14.19+\n>   * Kubernetes 1.32+ required for CiliumEndpointSlices support\n\n> [!WARNING]\n> Azure CNI powered by Cilium is available only for Linux nodes. Windows node support is not available. Network policies using ipBlock to allow node or pod IPs are not supported.\n\n## Steps\n\n### 1. Deploy an AKS Cluster with Azure CNI Powered by Cilium\n\nYou can deploy AKS with Cilium using either overlay or VNet IP assignment modes.\n\n#### [Overlay Network](#tab/overlay)\n\nUse this option to assign pod IPs from an overlay network:\n\n```azurecli\naz aks create \\\n  --name <clusterName> \\\n  --resource-group <resourceGroupName> \\\n  --location <location> \\\n  --network-plugin azure \\\n  --network-plugin-mode overlay \\\n  --pod-cidr 192.168.0.0/16 \\\n  --network-dataplane cilium \\\n  --generate-ssh-keys\n```\n\n> [!NOTE]\n> The `--network-dataplane cilium` flag enables Azure CNI powered by Cilium. This replaces the deprecated `--enable-ebpf-dataplane` flag.\n\n#### [Virtual Network (VNet) Mode](#tab/vnet)\n\nAssign pod IPs from a dedicated subnet in your Azure VNet:\n\n```azurecli\n# Create the resource group\naz group create --name <resourceGroupName> --location <location>\n\n# Create a virtual network and subnets for nodes and pods\naz network vnet create \\\n  --resource-group <resourceGroupName> \\\n  --location <location> \\\n  --name <vnetName> \\\n  --address-prefixes <address-prefix, e.g., 10.0.0.0/8> -o none\n\naz network vnet subnet create \\\n  --resource-group <resourceGroupName> \\\n  --vnet-name <vnetName> \\\n  --name nodesubnet \\\n  --address-prefixes <address-prefix, e.g., 10.240.0.0/16> -o none\n\naz network vnet subnet create \\\n  --resource-group <resourceGroupName> \\\n  --vnet-name <vnetName> \\\n  --name podsubnet \\\n  --address-prefixes <address-prefix, e.g., 10.241.0.0/16> -o none\n\n# Deploy AKS with Cilium\naz aks create \\\n  --name <clusterName> \\\n  --resource-group <resourceGroupName> \\\n  --location <location> \\\n  --max-pods 250 \\\n  --network-plugin azure \\\n  --vnet-subnet-id /subscriptions/<subscriptionId>/resourceGroups/<resourceGroupName>/providers/Microsoft.Network/virtualNetworks/<vnetName>/subnets/nodesubnet \\\n  --pod-subnet-id /subscriptions/<subscriptionId>/resourceGroups/<resourceGroupName>/providers/Microsoft.Network/virtualNetworks/<vnetName>/subnets/podsubnet \\\n  --network-dataplane cilium \\\n  --generate-ssh-keys\n```\n\n---\n\n> [!TIP]\n> For most production scenarios, using VNet mode provides better integration with Azure networking and security controls.\n\n### 2. Configure CiliumEndpointSlices\n\nCiliumEndpointSlices are supported in AKS clusters running Kubernetes 1.32 and above. They enable dynamic grouping of endpoints for improved scalability and policy enforcement.\n\n- Endpoint slices are created, updated, and deleted automatically as pods are scheduled or removed.\n- No manual grouping configuration is supported; grouping is managed by Cilium.\n\n> [!NOTE]\n> Priority namespaces via `cilium.io/ces-namespace` are not supported in AKS-managed CiliumEndpointSlices.\n\n#### Example: Viewing CiliumEndpointSlices\n\n```azurecli\nkubectl get ciliumnodeslices\n```\n\n### 3. Enforce Network Policies with Cilium\n\nCilium provides advanced network policy enforcement, supporting both Kubernetes NetworkPolicy and Cilium-specific L3/L4 policies.\n\n#### Example: Basic Network Policy YAML\n\n```yaml\napiVersion: networking.k8s.io/v1\nkind: NetworkPolicy\nmetadata:\n  name: allow-nginx\nspec:\n  podSelector:\n    matchLabels:\n      app: nginx\n  policyTypes:\n  - Ingress\n  ingress:\n  - from:\n    - podSelector:\n        matchLabels:\n          app: frontend\n```\n\n> [!WARNING]\n> Network policies using `ipBlock` cannot be used to allow traffic to pod or node IPs. To allow traffic to all pods, use `namespaceSelector` and `podSelector` instead.\n\n#### Example: Workaround for ipBlock Limitation\n\n```yaml\napiVersion: networking.k8s.io/v1\nkind: NetworkPolicy\nmetadata:\n  name: allow-all-egress\nspec:\n  podSelector: {}\n  policyTypes:\n  - Egress\n  egress:\n  - to:\n    - ipBlock:\n        cidr: 0.0.0.0/0\n    - namespaceSelector: {}\n    - podSelector: {}\n```\n\n### 4. Integrate with Azure Monitor and Log Analytics\n\nCilium in AKS integrates with Azure Monitor and Log Analytics for enhanced observability:\n\n- Enable monitoring during cluster creation or via Azure Portal.\n- View metrics, logs, and diagnostic information in Log Analytics workspaces.\n\n> [!TIP]\n> Use out-of-the-box dashboards to visualize endpoint slice health, latency, and error rates. Configure alerts for synchronization failures or policy enforcement breaches.\n\n#### Example: Viewing Cilium Status and Observability\n\n```azurecli\nkubectl -n kube-system get pods -l k8s-app=cilium\nkubectl -n kube-system logs <cilium-pod-name>\n```\n\n### 5. Configure Security with Azure Active Directory\n\n- All communications between components are encrypted.\n- AKS integrates with Azure Active Directory (AAD) for secure authentication and authorization.\n- Use AAD-integrated RBAC to manage access to network policy and endpoint slice resources.\n\n### 6. Operational Best Practices\n\n- **Scalability:** AKS with CiliumEndpointSlices supports up to 5,000 pods across 500 nodes without performance degradation.\n- **Reliability:** Target 99.99% uptime for networking subsystems.\n- **Fallback Mechanisms:** If CiliumEndpointSlices fail, AKS reverts to traditional endpoint management automatically.\n- **Maintainability:** Use modular configuration and leverage Azure Monitor for diagnostics.\n\n> [!WARNING]\n> Version compatibility is critical. Ensure your AKS, Cilium, and Azure CNI versions meet the documented requirements.\n\n### 7. Known Limitations and Workarounds\n\n- **Windows Support:** Only Linux nodes are supported.\n- **ipBlock Restrictions:** Network policies with `ipBlock` cannot select pod or node IPs. Use `namespaceSelector` and `podSelector` as a workaround.\n- **No kube-proxy:** AKS clusters with Cilium do not use kube-proxy. All service routing is handled by Cilium.\n- **No manual Cilium configuration:** AKS manages Cilium configuration; custom modifications are not supported.\n\n## Next Steps\n\n- Explore [advanced network policy scenarios with Cilium](https://learn.microsoft.com/en-us/azure/aks/azure-cni-powered-by-cilium)\n- Integrate with GitOps workflows for automated policy deployment\n- Monitor and troubleshoot Cilium networking in production AKS clusters\n- Review [Azure Kubernetes Service networking requirements](azure-arc/kubernetes/network-requirements.md)\n\n> [!div class=\"nextstepaction\"]\n> [Learn more about Azure CNI powered by Cilium](https://learn.microsoft.com/en-us/azure/aks/azure-cni-powered-by-cilium)\n",
    "metadata": {
      "word_count": 1700,
      "sections_created": [
        "Introduction",
        "Prerequisites",
        "Steps",
        "Next Steps"
      ],
      "materials_used": [
        "./inputs/aks-prd-02.docx",
        "https://learn.microsoft.com/en-us/azure/aks/azure-cni-powered-by-cilium"
      ],
      "key_topics_covered": [
        "Cilium",
        "Azure CNI",
        "CiliumEndpointSlices",
        "Network Policies",
        "Azure Monitor Integration",
        "Operational Best Practices",
        "Known Limitations"
      ]
    }
  }
}